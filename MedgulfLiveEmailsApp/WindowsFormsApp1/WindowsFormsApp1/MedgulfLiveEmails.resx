<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAgAwAABMLAAATCwAAAAAAAAAA
        AAD/////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////////+5pmTKuoitmU3Q
        w5i7qGfOv5P//////v7+///+//7////NwJKtlkq5pmXJvo3Pv5Gzl07Txp20nFa4pmW3o17//////v//
        ///9/v/////i2r+njjzh2r6okELOwJGYeRi1oVzRxZi8q2m7qGq7p2bCr3X////+/v/9///////////C
        rnSrk0GynlTOw5TIuIGkijTWy6SulUjGuIOkjDX////////////+//7////Wx6GtlkrYzqqihzHYzaeU
        eBOvmEvEtX/Pv5OznVbEtH2umEz////+//////7///////+pjj3GuIK3o13UxZ60nlqYfRfi2ryvmlHM
        vIydgSP7+vX//////v7///////+/r3W6p2XEtnu0nlnd0rOLbQSxmE6ul0nb0LGjiDPd1LWYehjl3cT/
        ///////////j3MGSdQ3Rx6Cpjjrh1ryjiTV7VgDn4cmvm07HuYahhi7LvYz////////////y8OaXfB7W
        x5+rkD7TyZ3Lu4l/WwCzoFqMbAfo4cqrk0TNv5HFs36SdA7Sxpzy7uPTxp6VdhHIuojGtoGwmk3k3saV
        eheLbAvLvY3DsHe3pGHZ0q6PcBHHuYXy7uLg2LuhhCyvm1Hd1bWcfyTt6dmpkUCBXQC+q217VADDsXXb
        0rCWehjg2LvPw5Soj0SjiTipj0HPw5Xd0rOVdxLe1ri3o2C0oFnNv4ycgSTo4c2ZexvNv5Dd1LOpk0Wi
        iDejjD3Br3fp4sybgCLIuYbl3cSDYgCJaAHCrnSqlUKVdxfj27/KvIaPbwbQwJPk4Mne2b3g17nFt4iP
        bwfNwZLq49GMbADi2Lz//vyWeRfNv5Dl3seObQS5o2fi28Hc1LPi2b3Xy6aVdhKznVj+/vyhhiyXfBuW
        eRm2omDPw5TOwZKTdBDw69vc07OjijibfR+mjTiYexqkiDfg2bz08+mVdxS0oV3////////az66ObgPl
        3MHx8OKtk1GegCOliziihS6dgSLMv5D///+vmVCgijPe1LOXeRe0oFvJu4j///+1oFyPcQ3KvYrv7N3q
        4c3h2Lrr5dH28+nTyKCRcw6wmlD8/Pr+///+//7////RxpqIagDBrXXr5c3x7Nzg2b7m4Mnw7N/d1bif
        hjObfSH29O3o4s2PcAW2oF7Bs3v////////YzKmiiTSegy+tl0etmEytlEikiDSdgijOwZT+/v3////+
        ///+/v/////////j3MSukkeagCOnkUStl0ytl0miiTiegSbArXT39e3////b07KPcQe2oVzDtX3/////
        ///////7+vfo4s3Yy6bbz63Zzqzm38n59vD////////+//////7///7+///////////9/fzq59baz7Da
        zq3Yzarf2bv28+r////////////c07SPcQe1olvFtX7////////+////////////////////////////
        /////////v/+//7+/v///v79///+///////////////////////////////////////+/v/////d1LWP
        cAi1oV3FtX3/////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////d1LWOcAi1oV3FtX3/////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ///////////d1LWOcAi1oV3FtX3/////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////d1LWOcAi1oV3FtX3/////
        ////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////d1LWOcAi1oV3FtX3/////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////d1LWO
        cAi1oV3FtX3/////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////d1LWOcAi0oV7GtX7/////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ///////////d1bSPcQe1oF3FtH7////+////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////c1LWPcAi1olrDtX3/////
        ////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////c1bSPcQe0oVvEtX7/////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////d1LWQ
        cAi2nl7ItoT/////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////f2LqPbwi2ol6+q2z39ezv7d7x7d3x7d3x7d3x
        7d3x7d3x7d3x7d3x7d3x7d3x7d3x7d3x7d3x7d3x7d3x7d3x7d3x7d3x7d3x7d3x7d3x7d3x7d3x7d3x
        7d3x7d308ufSx52PcAe4qGWPbwybfyGYehqXehqXehqXehqXehqXehqXehqXehqXehqXehqXehqXehqX
        ehqXehqXehqXehqXehqXehqXehqXehqXehqXehqXehqXehqXehqXehqafR6TdxONbAH/////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        //////////////////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>