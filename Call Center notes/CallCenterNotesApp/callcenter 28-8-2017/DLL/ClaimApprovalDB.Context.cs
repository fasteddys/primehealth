//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CallCenterNotesApp.DLL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PhNetworkEntities : DbContext
    {
        public PhNetworkEntities()
            : base("name=PhNetworkEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccountTB> AccountTBs { get; set; }
        public virtual DbSet<CallCenterEmailApproval> CallCenterEmailApprovals { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<ClaimsApproval> ClaimsApprovals { get; set; }
        public virtual DbSet<ClientNote> ClientNotes { get; set; }
        public virtual DbSet<ColorAlert> ColorAlerts { get; set; }
        public virtual DbSet<Complaint> Complaints { get; set; }
        public virtual DbSet<DoctorTB> DoctorTBs { get; set; }
        public virtual DbSet<EmailApprovalLogsDetail> EmailApprovalLogsDetails { get; set; }
        public virtual DbSet<EmailApprovalLogTypeDIM> EmailApprovalLogTypeDIMs { get; set; }
        public virtual DbSet<EmailApprovalReceivingReceipt> EmailApprovalReceivingReceipts { get; set; }
        public virtual DbSet<EmailApprovalRequest> EmailApprovalRequests { get; set; }
        public virtual DbSet<EmailApprovalsCategoryDIM> EmailApprovalsCategoryDIMs { get; set; }
        public virtual DbSet<EmailApprovalsConfiguration> EmailApprovalsConfigurations { get; set; }
        public virtual DbSet<EmailApprovalsFailedTransaction> EmailApprovalsFailedTransactions { get; set; }
        public virtual DbSet<EmailApprovalsGroup_User> EmailApprovalsGroup_User { get; set; }
        public virtual DbSet<EmailApprovalsGroup> EmailApprovalsGroups { get; set; }
        public virtual DbSet<EmailApprovalsPriorityDIM> EmailApprovalsPriorityDIMs { get; set; }
        public virtual DbSet<EmailApprovalsTechnicalDestinationDim> EmailApprovalsTechnicalDestinationDims { get; set; }
        public virtual DbSet<EmailApprovalsUser_Email> EmailApprovalsUser_Email { get; set; }
        public virtual DbSet<EmailRequestAttachmentsDetail> EmailRequestAttachmentsDetails { get; set; }
        public virtual DbSet<EmailRequestMailingDetail> EmailRequestMailingDetails { get; set; }
        public virtual DbSet<EmailRequestRequest_TechnicalDestination> EmailRequestRequest_TechnicalDestination { get; set; }
        public virtual DbSet<EmailRequestStatusDIM> EmailRequestStatusDIMs { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<HospitalTB> HospitalTBs { get; set; }
        public virtual DbSet<LaboratoryTB> LaboratoryTBs { get; set; }
        public virtual DbSet<LocationsTB> LocationsTBs { get; set; }
        public virtual DbSet<Loginer> Loginers { get; set; }
        public virtual DbSet<Medicalid> Medicalids { get; set; }
        public virtual DbSet<NewsFeed> NewsFeeds { get; set; }
        public virtual DbSet<NoteAttachment> NoteAttachments { get; set; }
        public virtual DbSet<OnlineApprovals_AttachmentTypeDIM> OnlineApprovals_AttachmentTypeDIM { get; set; }
        public virtual DbSet<OnlineApprovals_Configrations> OnlineApprovals_Configrations { get; set; }
        public virtual DbSet<OnlineApprovals_DemandedDrugsDetails> OnlineApprovals_DemandedDrugsDetails { get; set; }
        public virtual DbSet<OnlineApprovals_DrugsListDIM> OnlineApprovals_DrugsListDIM { get; set; }
        public virtual DbSet<OnlineApprovals_FailedTransactions> OnlineApprovals_FailedTransactions { get; set; }
        public virtual DbSet<OnlineApprovals_Inovices> OnlineApprovals_Inovices { get; set; }
        public virtual DbSet<OnlineApprovals_LoginKeys> OnlineApprovals_LoginKeys { get; set; }
        public virtual DbSet<OnlineApprovals_LogsDetails> OnlineApprovals_LogsDetails { get; set; }
        public virtual DbSet<OnlineApprovals_LogTypeDIM> OnlineApprovals_LogTypeDIM { get; set; }
        public virtual DbSet<OnlineApprovals_ProviderTypeDIM> OnlineApprovals_ProviderTypeDIM { get; set; }
        public virtual DbSet<OnlineApprovals_RequestAttachment> OnlineApprovals_RequestAttachment { get; set; }
        public virtual DbSet<OnlineApprovals_RequestDetails> OnlineApprovals_RequestDetails { get; set; }
        public virtual DbSet<OnlineApprovals_RequestDetailsTypeDIM> OnlineApprovals_RequestDetailsTypeDIM { get; set; }
        public virtual DbSet<OnlineApprovals_Requests> OnlineApprovals_Requests { get; set; }
        public virtual DbSet<OnlineApprovals_RequestStatusDIM> OnlineApprovals_RequestStatusDIM { get; set; }
        public virtual DbSet<OnlineApprovals_RequestTypeDIM> OnlineApprovals_RequestTypeDIM { get; set; }
        public virtual DbSet<OpticalTB> OpticalTBs { get; set; }
        public virtual DbSet<PharmacyTB> PharmacyTBs { get; set; }
        public virtual DbSet<PhLog> PhLogs { get; set; }
        public virtual DbSet<pic> pics { get; set; }
        public virtual DbSet<ProviderAppUser> ProviderAppUsers { get; set; }
        public virtual DbSet<SubLocatiobTB> SubLocatiobTBs { get; set; }
        public virtual DbSet<TicketType> TicketTypes { get; set; }
        public virtual DbSet<TLoginer> TLoginers { get; set; }
        public virtual DbSet<WebsiteAccount> WebsiteAccounts { get; set; }
        public virtual DbSet<CallCenterAppUser> CallCenterAppUsers { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<SP_DashboardSearch_Result> SP_DashboardSearch(string medicalID, string doctorName, string auditName, string operatorName, string providerName, string status, string type, string crationEndDateTo, string creationDateFrom, string approvalCategory, string priority, string emailContent, string mailSubject, string mailSource, string attachment, string recipient)
        {
            var medicalIDParameter = medicalID != null ?
                new ObjectParameter("MedicalID", medicalID) :
                new ObjectParameter("MedicalID", typeof(string));
    
            var doctorNameParameter = doctorName != null ?
                new ObjectParameter("DoctorName", doctorName) :
                new ObjectParameter("DoctorName", typeof(string));
    
            var auditNameParameter = auditName != null ?
                new ObjectParameter("AuditName", auditName) :
                new ObjectParameter("AuditName", typeof(string));
    
            var operatorNameParameter = operatorName != null ?
                new ObjectParameter("OperatorName", operatorName) :
                new ObjectParameter("OperatorName", typeof(string));
    
            var providerNameParameter = providerName != null ?
                new ObjectParameter("ProviderName", providerName) :
                new ObjectParameter("ProviderName", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var crationEndDateToParameter = crationEndDateTo != null ?
                new ObjectParameter("CrationEndDateTo", crationEndDateTo) :
                new ObjectParameter("CrationEndDateTo", typeof(string));
    
            var creationDateFromParameter = creationDateFrom != null ?
                new ObjectParameter("CreationDateFrom", creationDateFrom) :
                new ObjectParameter("CreationDateFrom", typeof(string));
    
            var approvalCategoryParameter = approvalCategory != null ?
                new ObjectParameter("ApprovalCategory", approvalCategory) :
                new ObjectParameter("ApprovalCategory", typeof(string));
    
            var priorityParameter = priority != null ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(string));
    
            var emailContentParameter = emailContent != null ?
                new ObjectParameter("EmailContent", emailContent) :
                new ObjectParameter("EmailContent", typeof(string));
    
            var mailSubjectParameter = mailSubject != null ?
                new ObjectParameter("MailSubject", mailSubject) :
                new ObjectParameter("MailSubject", typeof(string));
    
            var mailSourceParameter = mailSource != null ?
                new ObjectParameter("MailSource", mailSource) :
                new ObjectParameter("MailSource", typeof(string));
    
            var attachmentParameter = attachment != null ?
                new ObjectParameter("Attachment", attachment) :
                new ObjectParameter("Attachment", typeof(string));
    
            var recipientParameter = recipient != null ?
                new ObjectParameter("recipient", recipient) :
                new ObjectParameter("recipient", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DashboardSearch_Result>("SP_DashboardSearch", medicalIDParameter, doctorNameParameter, auditNameParameter, operatorNameParameter, providerNameParameter, statusParameter, typeParameter, crationEndDateToParameter, creationDateFromParameter, approvalCategoryParameter, priorityParameter, emailContentParameter, mailSubjectParameter, mailSourceParameter, attachmentParameter, recipientParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<SP_GenerateAlertReport_Result> SP_GenerateAlertReport(string from, string to)
        {
            var fromParameter = from != null ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GenerateAlertReport_Result>("SP_GenerateAlertReport", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<SP_GetActivityReportByDateRange_Result> SP_GetActivityReportByDateRange(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetActivityReportByDateRange_Result>("SP_GetActivityReportByDateRange", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<SP_GetAuditActionAverageTime_Result> SP_GetAuditActionAverageTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAuditActionAverageTime_Result>("SP_GetAuditActionAverageTime");
        }
    
        public virtual ObjectResult<SP_GetAuditActivityReportByDateRange_Result> SP_GetAuditActivityReportByDateRange(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAuditActivityReportByDateRange_Result>("SP_GetAuditActivityReportByDateRange", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<SP_GetAuditAssignAverageTime_Result> SP_GetAuditAssignAverageTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAuditAssignAverageTime_Result>("SP_GetAuditAssignAverageTime");
        }
    
        public virtual ObjectResult<SP_GetDoctorActionAverageTime_Result> SP_GetDoctorActionAverageTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetDoctorActionAverageTime_Result>("SP_GetDoctorActionAverageTime");
        }
    
        public virtual ObjectResult<SP_GetDoctorActivityReportByDateRange_Result> SP_GetDoctorActivityReportByDateRange(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetDoctorActivityReportByDateRange_Result>("SP_GetDoctorActivityReportByDateRange", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<SP_GetDoctorAssignAverageTime_Result> SP_GetDoctorAssignAverageTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetDoctorAssignAverageTime_Result>("SP_GetDoctorAssignAverageTime");
        }
    
        public virtual ObjectResult<SP_GetOpeartorActionAverageTime_Result> SP_GetOpeartorActionAverageTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetOpeartorActionAverageTime_Result>("SP_GetOpeartorActionAverageTime");
        }
    
        public virtual ObjectResult<SP_GetOpeartorAssignAverageTime_Result> SP_GetOpeartorAssignAverageTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetOpeartorAssignAverageTime_Result>("SP_GetOpeartorAssignAverageTime");
        }
    
        public virtual ObjectResult<SP_GetOperatorActivityReportByDateRange_Result> SP_GetOperatorActivityReportByDateRange(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetOperatorActivityReportByDateRange_Result>("SP_GetOperatorActivityReportByDateRange", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<SP_GetOperatorManualActivityReportByDateRange_Result> SP_GetOperatorManualActivityReportByDateRange(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetOperatorManualActivityReportByDateRange_Result>("SP_GetOperatorManualActivityReportByDateRange", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<SP_GetTicketsAverageTimeByType_Result> SP_GetTicketsAverageTimeByType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetTicketsAverageTimeByType_Result>("SP_GetTicketsAverageTimeByType");
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<SP_MyAssignedOnlineApprovalsReuests_Result> SP_MyAssignedOnlineApprovalsReuests(string doctorAssignee)
        {
            var doctorAssigneeParameter = doctorAssignee != null ?
                new ObjectParameter("DoctorAssignee", doctorAssignee) :
                new ObjectParameter("DoctorAssignee", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MyAssignedOnlineApprovalsReuests_Result>("SP_MyAssignedOnlineApprovalsReuests", doctorAssigneeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_MyAssignedOnlineApprovalsReuestsCount(string doctorAssignee)
        {
            var doctorAssigneeParameter = doctorAssignee != null ?
                new ObjectParameter("DoctorAssignee", doctorAssignee) :
                new ObjectParameter("DoctorAssignee", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_MyAssignedOnlineApprovalsReuestsCount", doctorAssigneeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_MyOnlineApprovals_CountRequestsByStatus(Nullable<int> statusID, string doctorAssignee)
        {
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var doctorAssigneeParameter = doctorAssignee != null ?
                new ObjectParameter("DoctorAssignee", doctorAssignee) :
                new ObjectParameter("DoctorAssignee", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_MyOnlineApprovals_CountRequestsByStatus", statusIDParameter, doctorAssigneeParameter);
        }
    
        public virtual ObjectResult<SP_MyOnlineApprovals_RequestsByStatus_Result> SP_MyOnlineApprovals_RequestsByStatus(Nullable<int> statusID, string doctorAssignee)
        {
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var doctorAssigneeParameter = doctorAssignee != null ?
                new ObjectParameter("DoctorAssignee", doctorAssignee) :
                new ObjectParameter("DoctorAssignee", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MyOnlineApprovals_RequestsByStatus_Result>("SP_MyOnlineApprovals_RequestsByStatus", statusIDParameter, doctorAssigneeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_OnlineApprovals_ClaimsPerCurrentMonth(Nullable<int> providerID)
        {
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("providerID", providerID) :
                new ObjectParameter("providerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_OnlineApprovals_ClaimsPerCurrentMonth", providerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_OnlineApprovals_CountRequestsByStatus(Nullable<int> statusID)
        {
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_OnlineApprovals_CountRequestsByStatus", statusIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_OnlineApprovals_CountRequestsByStatusAndProvider(Nullable<int> providerID, Nullable<int> statusID)
        {
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("providerID", providerID) :
                new ObjectParameter("providerID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_OnlineApprovals_CountRequestsByStatusAndProvider", providerIDParameter, statusIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_OnlineApprovals_CountTotalRequestsByProviderID(Nullable<int> providerID)
        {
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("providerID", providerID) :
                new ObjectParameter("providerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_OnlineApprovals_CountTotalRequestsByProviderID", providerIDParameter);
        }
    
        public virtual ObjectResult<SP_OnlineApprovals_InovicesByInvoiceID_Result> SP_OnlineApprovals_InovicesByInvoiceID(Nullable<int> invoiceID)
        {
            var invoiceIDParameter = invoiceID.HasValue ?
                new ObjectParameter("InvoiceID", invoiceID) :
                new ObjectParameter("InvoiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OnlineApprovals_InovicesByInvoiceID_Result>("SP_OnlineApprovals_InovicesByInvoiceID", invoiceIDParameter);
        }
    
        public virtual ObjectResult<SP_OnlineApprovals_InovicesByMedicalID_Result> SP_OnlineApprovals_InovicesByMedicalID(Nullable<int> medicalID)
        {
            var medicalIDParameter = medicalID.HasValue ?
                new ObjectParameter("MedicalID", medicalID) :
                new ObjectParameter("MedicalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OnlineApprovals_InovicesByMedicalID_Result>("SP_OnlineApprovals_InovicesByMedicalID", medicalIDParameter);
        }
    
        public virtual ObjectResult<SP_OnlineApprovals_InovicesByRequestID_Result> SP_OnlineApprovals_InovicesByRequestID(Nullable<int> requestID)
        {
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OnlineApprovals_InovicesByRequestID_Result>("SP_OnlineApprovals_InovicesByRequestID", requestIDParameter);
        }
    
        public virtual ObjectResult<SP_OnlineApprovals_RequestsByprovider_Result> SP_OnlineApprovals_RequestsByprovider(Nullable<int> providerID)
        {
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("providerID", providerID) :
                new ObjectParameter("providerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OnlineApprovals_RequestsByprovider_Result>("SP_OnlineApprovals_RequestsByprovider", providerIDParameter);
        }
    
        public virtual ObjectResult<SP_OnlineApprovals_RequestsByStatus_Result> SP_OnlineApprovals_RequestsByStatus(Nullable<int> statusID)
        {
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OnlineApprovals_RequestsByStatus_Result>("SP_OnlineApprovals_RequestsByStatus", statusIDParameter);
        }
    
        public virtual ObjectResult<SP_OnlineApprovals_RequestsByStatusAndProvider_Result> SP_OnlineApprovals_RequestsByStatusAndProvider(Nullable<int> providerID, Nullable<int> statusID)
        {
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("providerID", providerID) :
                new ObjectParameter("providerID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OnlineApprovals_RequestsByStatusAndProvider_Result>("SP_OnlineApprovals_RequestsByStatusAndProvider", providerIDParameter, statusIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_OnlineApprovals_Total_Members(Nullable<int> providerID)
        {
            var providerIDParameter = providerID.HasValue ?
                new ObjectParameter("providerID", providerID) :
                new ObjectParameter("providerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_OnlineApprovals_Total_Members", providerIDParameter);
        }
    
        public virtual ObjectResult<SP_OnlineApprovalsSearch_Result> SP_OnlineApprovalsSearch(string memberName, string clientName, string claimNumber, string diagnose, string requestCreationTime, string closeTime, string iVRNumber, string requestTypeID, string requestStatusID, string drugName)
        {
            var memberNameParameter = memberName != null ?
                new ObjectParameter("MemberName", memberName) :
                new ObjectParameter("MemberName", typeof(string));
    
            var clientNameParameter = clientName != null ?
                new ObjectParameter("ClientName", clientName) :
                new ObjectParameter("ClientName", typeof(string));
    
            var claimNumberParameter = claimNumber != null ?
                new ObjectParameter("ClaimNumber", claimNumber) :
                new ObjectParameter("ClaimNumber", typeof(string));
    
            var diagnoseParameter = diagnose != null ?
                new ObjectParameter("Diagnose", diagnose) :
                new ObjectParameter("Diagnose", typeof(string));
    
            var requestCreationTimeParameter = requestCreationTime != null ?
                new ObjectParameter("RequestCreationTime", requestCreationTime) :
                new ObjectParameter("RequestCreationTime", typeof(string));
    
            var closeTimeParameter = closeTime != null ?
                new ObjectParameter("CloseTime", closeTime) :
                new ObjectParameter("CloseTime", typeof(string));
    
            var iVRNumberParameter = iVRNumber != null ?
                new ObjectParameter("IVRNumber", iVRNumber) :
                new ObjectParameter("IVRNumber", typeof(string));
    
            var requestTypeIDParameter = requestTypeID != null ?
                new ObjectParameter("RequestTypeID", requestTypeID) :
                new ObjectParameter("RequestTypeID", typeof(string));
    
            var requestStatusIDParameter = requestStatusID != null ?
                new ObjectParameter("RequestStatusID", requestStatusID) :
                new ObjectParameter("RequestStatusID", typeof(string));
    
            var drugNameParameter = drugName != null ?
                new ObjectParameter("DrugName", drugName) :
                new ObjectParameter("DrugName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OnlineApprovalsSearch_Result>("SP_OnlineApprovalsSearch", memberNameParameter, clientNameParameter, claimNumberParameter, diagnoseParameter, requestCreationTimeParameter, closeTimeParameter, iVRNumberParameter, requestTypeIDParameter, requestStatusIDParameter, drugNameParameter);
        }
    
        public virtual ObjectResult<SP_Provider_Login_Result> SP_Provider_Login(string accountID, string password)
        {
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Provider_Login_Result>("SP_Provider_Login", accountIDParameter, passwordParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<SP_SearchInMailGroup_Result> SP_SearchInMailGroup(string medicalID, string doctorName, string auditName, string operatorName, string providerName, string status, string type, string crationEndDateTo, string creationDateFrom, string approvalCategory, string priority, string emailContent, string mailSubject, string mailSource, string attachment, string recipient, string groupEmail)
        {
            var medicalIDParameter = medicalID != null ?
                new ObjectParameter("MedicalID", medicalID) :
                new ObjectParameter("MedicalID", typeof(string));
    
            var doctorNameParameter = doctorName != null ?
                new ObjectParameter("DoctorName", doctorName) :
                new ObjectParameter("DoctorName", typeof(string));
    
            var auditNameParameter = auditName != null ?
                new ObjectParameter("AuditName", auditName) :
                new ObjectParameter("AuditName", typeof(string));
    
            var operatorNameParameter = operatorName != null ?
                new ObjectParameter("OperatorName", operatorName) :
                new ObjectParameter("OperatorName", typeof(string));
    
            var providerNameParameter = providerName != null ?
                new ObjectParameter("ProviderName", providerName) :
                new ObjectParameter("ProviderName", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var crationEndDateToParameter = crationEndDateTo != null ?
                new ObjectParameter("CrationEndDateTo", crationEndDateTo) :
                new ObjectParameter("CrationEndDateTo", typeof(string));
    
            var creationDateFromParameter = creationDateFrom != null ?
                new ObjectParameter("CreationDateFrom", creationDateFrom) :
                new ObjectParameter("CreationDateFrom", typeof(string));
    
            var approvalCategoryParameter = approvalCategory != null ?
                new ObjectParameter("ApprovalCategory", approvalCategory) :
                new ObjectParameter("ApprovalCategory", typeof(string));
    
            var priorityParameter = priority != null ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(string));
    
            var emailContentParameter = emailContent != null ?
                new ObjectParameter("EmailContent", emailContent) :
                new ObjectParameter("EmailContent", typeof(string));
    
            var mailSubjectParameter = mailSubject != null ?
                new ObjectParameter("MailSubject", mailSubject) :
                new ObjectParameter("MailSubject", typeof(string));
    
            var mailSourceParameter = mailSource != null ?
                new ObjectParameter("MailSource", mailSource) :
                new ObjectParameter("MailSource", typeof(string));
    
            var attachmentParameter = attachment != null ?
                new ObjectParameter("Attachment", attachment) :
                new ObjectParameter("Attachment", typeof(string));
    
            var recipientParameter = recipient != null ?
                new ObjectParameter("recipient", recipient) :
                new ObjectParameter("recipient", typeof(string));
    
            var groupEmailParameter = groupEmail != null ?
                new ObjectParameter("GroupEmail", groupEmail) :
                new ObjectParameter("GroupEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SearchInMailGroup_Result>("SP_SearchInMailGroup", medicalIDParameter, doctorNameParameter, auditNameParameter, operatorNameParameter, providerNameParameter, statusParameter, typeParameter, crationEndDateToParameter, creationDateFromParameter, approvalCategoryParameter, priorityParameter, emailContentParameter, mailSubjectParameter, mailSourceParameter, attachmentParameter, recipientParameter, groupEmailParameter);
        }
    
        public virtual ObjectResult<SP_Select_By_Category_Asc_Result> SP_Select_By_Category_Asc(string subType, Nullable<int> stause)
        {
            var subTypeParameter = subType != null ?
                new ObjectParameter("SubType", subType) :
                new ObjectParameter("SubType", typeof(string));
    
            var stauseParameter = stause.HasValue ?
                new ObjectParameter("Stause", stause) :
                new ObjectParameter("Stause", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_By_Category_Asc_Result>("SP_Select_By_Category_Asc", subTypeParameter, stauseParameter);
        }
    
        public virtual ObjectResult<SP_Select_By_Category_Desc_Result> SP_Select_By_Category_Desc(string subType, Nullable<int> stause)
        {
            var subTypeParameter = subType != null ?
                new ObjectParameter("SubType", subType) :
                new ObjectParameter("SubType", typeof(string));
    
            var stauseParameter = stause.HasValue ?
                new ObjectParameter("Stause", stause) :
                new ObjectParameter("Stause", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_By_Category_Desc_Result>("SP_Select_By_Category_Desc", subTypeParameter, stauseParameter);
        }
    
        public virtual ObjectResult<SP_Select_By_Priority_Asc_Result> SP_Select_By_Priority_Asc(string subType, Nullable<int> stause)
        {
            var subTypeParameter = subType != null ?
                new ObjectParameter("SubType", subType) :
                new ObjectParameter("SubType", typeof(string));
    
            var stauseParameter = stause.HasValue ?
                new ObjectParameter("Stause", stause) :
                new ObjectParameter("Stause", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_By_Priority_Asc_Result>("SP_Select_By_Priority_Asc", subTypeParameter, stauseParameter);
        }
    
        public virtual ObjectResult<SP_Select_By_Priority_Desc_Result> SP_Select_By_Priority_Desc(string subType, Nullable<int> stause)
        {
            var subTypeParameter = subType != null ?
                new ObjectParameter("SubType", subType) :
                new ObjectParameter("SubType", typeof(string));
    
            var stauseParameter = stause.HasValue ?
                new ObjectParameter("Stause", stause) :
                new ObjectParameter("Stause", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_By_Priority_Desc_Result>("SP_Select_By_Priority_Desc", subTypeParameter, stauseParameter);
        }
    
        public virtual ObjectResult<SP_Select_By_Time_Asc_Result> SP_Select_By_Time_Asc(Nullable<int> stause)
        {
            var stauseParameter = stause.HasValue ?
                new ObjectParameter("Stause", stause) :
                new ObjectParameter("Stause", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_By_Time_Asc_Result>("SP_Select_By_Time_Asc", stauseParameter);
        }
    
        public virtual ObjectResult<SP_Select_By_Time_desc_Result> SP_Select_By_Time_desc(Nullable<int> stause)
        {
            var stauseParameter = stause.HasValue ?
                new ObjectParameter("Stause", stause) :
                new ObjectParameter("Stause", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_By_Time_desc_Result>("SP_Select_By_Time_desc", stauseParameter);
        }
    
        public virtual ObjectResult<SP_Select_By_Type_Asc_Result> SP_Select_By_Type_Asc(string subType, Nullable<int> stause)
        {
            var subTypeParameter = subType != null ?
                new ObjectParameter("SubType", subType) :
                new ObjectParameter("SubType", typeof(string));
    
            var stauseParameter = stause.HasValue ?
                new ObjectParameter("Stause", stause) :
                new ObjectParameter("Stause", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_By_Type_Asc_Result>("SP_Select_By_Type_Asc", subTypeParameter, stauseParameter);
        }
    
        public virtual ObjectResult<SP_Select_By_Type_Desc_Result> SP_Select_By_Type_Desc(string subType, Nullable<int> stause)
        {
            var subTypeParameter = subType != null ?
                new ObjectParameter("SubType", subType) :
                new ObjectParameter("SubType", typeof(string));
    
            var stauseParameter = stause.HasValue ?
                new ObjectParameter("Stause", stause) :
                new ObjectParameter("Stause", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_By_Type_Desc_Result>("SP_Select_By_Type_Desc", subTypeParameter, stauseParameter);
        }
    
        public virtual ObjectResult<SP_Select_OnlineApprovalByAccountID_Result> SP_Select_OnlineApprovalByAccountID(string accountName)
        {
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_OnlineApprovalByAccountID_Result>("SP_Select_OnlineApprovalByAccountID", accountNameParameter);
        }
    
        public virtual ObjectResult<SP_Select_OnlineApprovalsAttachment_Result> SP_Select_OnlineApprovalsAttachment(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_OnlineApprovalsAttachment_Result>("SP_Select_OnlineApprovalsAttachment", iDParameter);
        }
    
        public virtual ObjectResult<SP_Select_OnlineApprovalsDemandDrugs_Result> SP_Select_OnlineApprovalsDemandDrugs(Nullable<int> requestID)
        {
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_OnlineApprovalsDemandDrugs_Result>("SP_Select_OnlineApprovalsDemandDrugs", requestIDParameter);
        }
    
        public virtual ObjectResult<SP_Select_OnlineApprovalsDrugList_Result> SP_Select_OnlineApprovalsDrugList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_OnlineApprovalsDrugList_Result>("SP_Select_OnlineApprovalsDrugList");
        }
    
        public virtual ObjectResult<SP_Select_OnlineApprovalsProvidersByID_Result> SP_Select_OnlineApprovalsProvidersByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_OnlineApprovalsProvidersByID_Result>("SP_Select_OnlineApprovalsProvidersByID", iDParameter);
        }
    
        public virtual ObjectResult<SP_Select_OnlineApprovalsRequestDetails_Result> SP_Select_OnlineApprovalsRequestDetails(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_OnlineApprovalsRequestDetails_Result>("SP_Select_OnlineApprovalsRequestDetails", iDParameter);
        }
    
        public virtual ObjectResult<SP_Select_OnlineApprovalsRequests_Result> SP_Select_OnlineApprovalsRequests(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_OnlineApprovalsRequests_Result>("SP_Select_OnlineApprovalsRequests", iDParameter);
        }
    
        public virtual ObjectResult<SP_Select_Request_Result> SP_Select_Request(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Select_Request_Result>("SP_Select_Request", iDParameter);
        }
    
        public virtual ObjectResult<SP_SelectAll_By_Status_Result> SP_SelectAll_By_Status(Nullable<int> stause)
        {
            var stauseParameter = stause.HasValue ?
                new ObjectParameter("Stause", stause) :
                new ObjectParameter("Stause", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SelectAll_By_Status_Result>("SP_SelectAll_By_Status", stauseParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
