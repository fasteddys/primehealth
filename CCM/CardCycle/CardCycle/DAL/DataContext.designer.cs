#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CardCycle.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="cardDB")]
	public partial class DataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertaccountTB(accountTB instance);
    partial void UpdateaccountTB(accountTB instance);
    partial void DeleteaccountTB(accountTB instance);
    partial void InsertClientTB(ClientTB instance);
    partial void UpdateClientTB(ClientTB instance);
    partial void DeleteClientTB(ClientTB instance);
    partial void InsertrequestTB(requestTB instance);
    partial void UpdaterequestTB(requestTB instance);
    partial void DeleterequestTB(requestTB instance);
    #endregion
		
		public DataContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["cardDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<accountTB> accountTBs
		{
			get
			{
				return this.GetTable<accountTB>();
			}
		}
		
		public System.Data.Linq.Table<messagesTB> messagesTBs
		{
			get
			{
				return this.GetTable<messagesTB>();
			}
		}
		
		public System.Data.Linq.Table<ClientTB> ClientTBs
		{
			get
			{
				return this.GetTable<ClientTB>();
			}
		}
		
		public System.Data.Linq.Table<requestTB> requestTBs
		{
			get
			{
				return this.GetTable<requestTB>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.accountTB")]
	public partial class accountTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _password;
		
		private string _type;
		
		private string _isOnline;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnisOnlineChanging(string value);
    partial void OnisOnlineChanged();
    #endregion
		
		public accountTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(50)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isOnline", DbType="NChar(10)")]
		public string isOnline
		{
			get
			{
				return this._isOnline;
			}
			set
			{
				if ((this._isOnline != value))
				{
					this.OnisOnlineChanging(value);
					this.SendPropertyChanging();
					this._isOnline = value;
					this.SendPropertyChanged("isOnline");
					this.OnisOnlineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.messagesTB")]
	public partial class messagesTB
	{
		
		private int _id;
		
		private string _mSubject;
		
		private string _mBody;
		
		private string _mTo;
		
		private string _mfrom;
		
		public messagesTB()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mSubject", DbType="NVarChar(50)")]
		public string mSubject
		{
			get
			{
				return this._mSubject;
			}
			set
			{
				if ((this._mSubject != value))
				{
					this._mSubject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mBody", DbType="NVarChar(50)")]
		public string mBody
		{
			get
			{
				return this._mBody;
			}
			set
			{
				if ((this._mBody != value))
				{
					this._mBody = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mTo", DbType="NVarChar(50)")]
		public string mTo
		{
			get
			{
				return this._mTo;
			}
			set
			{
				if ((this._mTo != value))
				{
					this._mTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mfrom", DbType="NVarChar(50)")]
		public string mfrom
		{
			get
			{
				return this._mfrom;
			}
			set
			{
				if ((this._mfrom != value))
				{
					this._mfrom = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientTB")]
	public partial class ClientTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ClientName;
		
		private string _ClientNotes;
		
		private string _ClientStatus;
		
		private string _Active;
		
		private string _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnClientNotesChanging(string value);
    partial void OnClientNotesChanged();
    partial void OnClientStatusChanging(string value);
    partial void OnClientStatusChanged();
    partial void OnActiveChanging(string value);
    partial void OnActiveChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public ClientTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientNotes", DbType="NVarChar(MAX)")]
		public string ClientNotes
		{
			get
			{
				return this._ClientNotes;
			}
			set
			{
				if ((this._ClientNotes != value))
				{
					this.OnClientNotesChanging(value);
					this.SendPropertyChanging();
					this._ClientNotes = value;
					this.SendPropertyChanged("ClientNotes");
					this.OnClientNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientStatus", DbType="NVarChar(50)")]
		public string ClientStatus
		{
			get
			{
				return this._ClientStatus;
			}
			set
			{
				if ((this._ClientStatus != value))
				{
					this.OnClientStatusChanging(value);
					this.SendPropertyChanging();
					this._ClientStatus = value;
					this.SendPropertyChanged("ClientStatus");
					this.OnClientStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="NVarChar(50)")]
		public string Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.requestTB")]
	public partial class requestTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _IssCardsNum;
		
		private string _rdate;
		
		private System.Nullable<int> _CardsNum;
		
		private string _apvIssuance;
		
		private string _apvPrint;
		
		private string _apvQControl;
		
		private string _rSubject;
		
		private string _States;
		
		private string _color;
		
		private string _rBody;
		
		private string _rAttach;
		
		private string _isApproved;
		
		private string _rFrom;
		
		private string _rPending;
		
		private string _rClose;
		
		private string _ToIssunge;
		
		private string _ToPrint;
		
		private string _ToQC;
		
		private string _rType;
		
		private string _rBody2;
		
		private string _Assigned;
		
		private string _AssignPerson;
		
		private string _AssignPrint;
		
		private string _AssignQC;
		
		private string _AssignUnderWriting;
		
		private string _LogAM;
		
		private string _LogUW;
		
		private string _LogIssuance;
		
		private string _LogPrint;
		
		private string _LogQC;
		
		private string _confrimAM;
		
		private string _ConfrimUW;
		
		private string _ApvUnderWriting;
		
		private string _rBody3;
		
		private string _rImgSympl;
		
		private string _aproveBy;
		
		private string _asignTime;
		
		private string _EndAsigntime;
		
		private string _AsignPrintTime;
		
		private string _EndPrintTime;
		
		private string _AsignQTime;
		
		private string _EndAsingQTime;
		
		private string _AsignDate;
		
		private string _EndAsignDate;
		
		private string _APDate;
		
		private string _EPDate;
		
		private string _AQCDate;
		
		private string _EQCDate;
		
		private string _closeNotes;
		
		private string _ClientName;
		
		private string _AComments;
		
		private string _PComments;
		
		private string _QComments;
		
		private string _Exceptions;
		
		private string _AccExcepApp;
		
		private string _ISSExcepApp;
		
		private string _AccExcepAppDate;
		
		private string _ISSExcepAppDate;
		
		private string _AccExcepAppUser;
		
		private string _ISSExcepAppUser;
		
		private string _rAccAttach;
		
		private string _ComplainComm;
		
		private string _CompAction;
		
		private string _ComplainState;
		
		private string _NumOfBooklets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnIssCardsNumChanging(System.Nullable<int> value);
    partial void OnIssCardsNumChanged();
    partial void OnrdateChanging(string value);
    partial void OnrdateChanged();
    partial void OnCardsNumChanging(System.Nullable<int> value);
    partial void OnCardsNumChanged();
    partial void OnapvIssuanceChanging(string value);
    partial void OnapvIssuanceChanged();
    partial void OnapvPrintChanging(string value);
    partial void OnapvPrintChanged();
    partial void OnapvQControlChanging(string value);
    partial void OnapvQControlChanged();
    partial void OnrSubjectChanging(string value);
    partial void OnrSubjectChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OncolorChanging(string value);
    partial void OncolorChanged();
    partial void OnrBodyChanging(string value);
    partial void OnrBodyChanged();
    partial void OnrAttachChanging(string value);
    partial void OnrAttachChanged();
    partial void OnisApprovedChanging(string value);
    partial void OnisApprovedChanged();
    partial void OnrFromChanging(string value);
    partial void OnrFromChanged();
    partial void OnrPendingChanging(string value);
    partial void OnrPendingChanged();
    partial void OnrCloseChanging(string value);
    partial void OnrCloseChanged();
    partial void OnToIssungeChanging(string value);
    partial void OnToIssungeChanged();
    partial void OnToPrintChanging(string value);
    partial void OnToPrintChanged();
    partial void OnToQCChanging(string value);
    partial void OnToQCChanged();
    partial void OnrTypeChanging(string value);
    partial void OnrTypeChanged();
    partial void OnrBody2Changing(string value);
    partial void OnrBody2Changed();
    partial void OnAssignedChanging(string value);
    partial void OnAssignedChanged();
    partial void OnAssignPersonChanging(string value);
    partial void OnAssignPersonChanged();
    partial void OnAssignPrintChanging(string value);
    partial void OnAssignPrintChanged();
    partial void OnAssignQCChanging(string value);
    partial void OnAssignQCChanged();
    partial void OnAssignUnderWritingChanging(string value);
    partial void OnAssignUnderWritingChanged();
    partial void OnLogAMChanging(string value);
    partial void OnLogAMChanged();
    partial void OnLogUWChanging(string value);
    partial void OnLogUWChanged();
    partial void OnLogIssuanceChanging(string value);
    partial void OnLogIssuanceChanged();
    partial void OnLogPrintChanging(string value);
    partial void OnLogPrintChanged();
    partial void OnLogQCChanging(string value);
    partial void OnLogQCChanged();
    partial void OnconfrimAMChanging(string value);
    partial void OnconfrimAMChanged();
    partial void OnConfrimUWChanging(string value);
    partial void OnConfrimUWChanged();
    partial void OnApvUnderWritingChanging(string value);
    partial void OnApvUnderWritingChanged();
    partial void OnrBody3Changing(string value);
    partial void OnrBody3Changed();
    partial void OnrImgSymplChanging(string value);
    partial void OnrImgSymplChanged();
    partial void OnaproveByChanging(string value);
    partial void OnaproveByChanged();
    partial void OnasignTimeChanging(string value);
    partial void OnasignTimeChanged();
    partial void OnEndAsigntimeChanging(string value);
    partial void OnEndAsigntimeChanged();
    partial void OnAsignPrintTimeChanging(string value);
    partial void OnAsignPrintTimeChanged();
    partial void OnEndPrintTimeChanging(string value);
    partial void OnEndPrintTimeChanged();
    partial void OnAsignQTimeChanging(string value);
    partial void OnAsignQTimeChanged();
    partial void OnEndAsingQTimeChanging(string value);
    partial void OnEndAsingQTimeChanged();
    partial void OnAsignDateChanging(string value);
    partial void OnAsignDateChanged();
    partial void OnEndAsignDateChanging(string value);
    partial void OnEndAsignDateChanged();
    partial void OnAPDateChanging(string value);
    partial void OnAPDateChanged();
    partial void OnEPDateChanging(string value);
    partial void OnEPDateChanged();
    partial void OnAQCDateChanging(string value);
    partial void OnAQCDateChanged();
    partial void OnEQCDateChanging(string value);
    partial void OnEQCDateChanged();
    partial void OncloseNotesChanging(string value);
    partial void OncloseNotesChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnACommentsChanging(string value);
    partial void OnACommentsChanged();
    partial void OnPCommentsChanging(string value);
    partial void OnPCommentsChanged();
    partial void OnQCommentsChanging(string value);
    partial void OnQCommentsChanged();
    partial void OnExceptionsChanging(string value);
    partial void OnExceptionsChanged();
    partial void OnAccExcepAppChanging(string value);
    partial void OnAccExcepAppChanged();
    partial void OnISSExcepAppChanging(string value);
    partial void OnISSExcepAppChanged();
    partial void OnAccExcepAppDateChanging(string value);
    partial void OnAccExcepAppDateChanged();
    partial void OnISSExcepAppDateChanging(string value);
    partial void OnISSExcepAppDateChanged();
    partial void OnAccExcepAppUserChanging(string value);
    partial void OnAccExcepAppUserChanged();
    partial void OnISSExcepAppUserChanging(string value);
    partial void OnISSExcepAppUserChanged();
    partial void OnrAccAttachChanging(string value);
    partial void OnrAccAttachChanged();
    partial void OnComplainCommChanging(string value);
    partial void OnComplainCommChanged();
    partial void OnCompActionChanging(string value);
    partial void OnCompActionChanged();
    partial void OnComplainStateChanging(string value);
    partial void OnComplainStateChanged();
    partial void OnNumOfBookletsChanging(string value);
    partial void OnNumOfBookletsChanged();
    #endregion
		
		public requestTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssCardsNum", DbType="Int")]
		public System.Nullable<int> IssCardsNum
		{
			get
			{
				return this._IssCardsNum;
			}
			set
			{
				if ((this._IssCardsNum != value))
				{
					this.OnIssCardsNumChanging(value);
					this.SendPropertyChanging();
					this._IssCardsNum = value;
					this.SendPropertyChanged("IssCardsNum");
					this.OnIssCardsNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rdate", DbType="NVarChar(50)")]
		public string rdate
		{
			get
			{
				return this._rdate;
			}
			set
			{
				if ((this._rdate != value))
				{
					this.OnrdateChanging(value);
					this.SendPropertyChanging();
					this._rdate = value;
					this.SendPropertyChanged("rdate");
					this.OnrdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardsNum", DbType="Int")]
		public System.Nullable<int> CardsNum
		{
			get
			{
				return this._CardsNum;
			}
			set
			{
				if ((this._CardsNum != value))
				{
					this.OnCardsNumChanging(value);
					this.SendPropertyChanging();
					this._CardsNum = value;
					this.SendPropertyChanged("CardsNum");
					this.OnCardsNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apvIssuance", DbType="NVarChar(50)")]
		public string apvIssuance
		{
			get
			{
				return this._apvIssuance;
			}
			set
			{
				if ((this._apvIssuance != value))
				{
					this.OnapvIssuanceChanging(value);
					this.SendPropertyChanging();
					this._apvIssuance = value;
					this.SendPropertyChanged("apvIssuance");
					this.OnapvIssuanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apvPrint", DbType="NVarChar(50)")]
		public string apvPrint
		{
			get
			{
				return this._apvPrint;
			}
			set
			{
				if ((this._apvPrint != value))
				{
					this.OnapvPrintChanging(value);
					this.SendPropertyChanging();
					this._apvPrint = value;
					this.SendPropertyChanged("apvPrint");
					this.OnapvPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apvQControl", DbType="NVarChar(50)")]
		public string apvQControl
		{
			get
			{
				return this._apvQControl;
			}
			set
			{
				if ((this._apvQControl != value))
				{
					this.OnapvQControlChanging(value);
					this.SendPropertyChanging();
					this._apvQControl = value;
					this.SendPropertyChanged("apvQControl");
					this.OnapvQControlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rSubject", DbType="NVarChar(MAX)")]
		public string rSubject
		{
			get
			{
				return this._rSubject;
			}
			set
			{
				if ((this._rSubject != value))
				{
					this.OnrSubjectChanging(value);
					this.SendPropertyChanging();
					this._rSubject = value;
					this.SendPropertyChanged("rSubject");
					this.OnrSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="NVarChar(50)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color", DbType="NVarChar(50)")]
		public string color
		{
			get
			{
				return this._color;
			}
			set
			{
				if ((this._color != value))
				{
					this.OncolorChanging(value);
					this.SendPropertyChanging();
					this._color = value;
					this.SendPropertyChanged("color");
					this.OncolorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rBody", DbType="NVarChar(MAX)")]
		public string rBody
		{
			get
			{
				return this._rBody;
			}
			set
			{
				if ((this._rBody != value))
				{
					this.OnrBodyChanging(value);
					this.SendPropertyChanging();
					this._rBody = value;
					this.SendPropertyChanged("rBody");
					this.OnrBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rAttach", DbType="NVarChar(MAX)")]
		public string rAttach
		{
			get
			{
				return this._rAttach;
			}
			set
			{
				if ((this._rAttach != value))
				{
					this.OnrAttachChanging(value);
					this.SendPropertyChanging();
					this._rAttach = value;
					this.SendPropertyChanged("rAttach");
					this.OnrAttachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isApproved", DbType="NVarChar(50)")]
		public string isApproved
		{
			get
			{
				return this._isApproved;
			}
			set
			{
				if ((this._isApproved != value))
				{
					this.OnisApprovedChanging(value);
					this.SendPropertyChanging();
					this._isApproved = value;
					this.SendPropertyChanged("isApproved");
					this.OnisApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rFrom", DbType="NVarChar(50)")]
		public string rFrom
		{
			get
			{
				return this._rFrom;
			}
			set
			{
				if ((this._rFrom != value))
				{
					this.OnrFromChanging(value);
					this.SendPropertyChanging();
					this._rFrom = value;
					this.SendPropertyChanged("rFrom");
					this.OnrFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rPending", DbType="NVarChar(50)")]
		public string rPending
		{
			get
			{
				return this._rPending;
			}
			set
			{
				if ((this._rPending != value))
				{
					this.OnrPendingChanging(value);
					this.SendPropertyChanging();
					this._rPending = value;
					this.SendPropertyChanged("rPending");
					this.OnrPendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rClose", DbType="NVarChar(50)")]
		public string rClose
		{
			get
			{
				return this._rClose;
			}
			set
			{
				if ((this._rClose != value))
				{
					this.OnrCloseChanging(value);
					this.SendPropertyChanging();
					this._rClose = value;
					this.SendPropertyChanged("rClose");
					this.OnrCloseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToIssunge", DbType="NVarChar(50)")]
		public string ToIssunge
		{
			get
			{
				return this._ToIssunge;
			}
			set
			{
				if ((this._ToIssunge != value))
				{
					this.OnToIssungeChanging(value);
					this.SendPropertyChanging();
					this._ToIssunge = value;
					this.SendPropertyChanged("ToIssunge");
					this.OnToIssungeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToPrint", DbType="NVarChar(50)")]
		public string ToPrint
		{
			get
			{
				return this._ToPrint;
			}
			set
			{
				if ((this._ToPrint != value))
				{
					this.OnToPrintChanging(value);
					this.SendPropertyChanging();
					this._ToPrint = value;
					this.SendPropertyChanged("ToPrint");
					this.OnToPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToQC", DbType="NVarChar(50)")]
		public string ToQC
		{
			get
			{
				return this._ToQC;
			}
			set
			{
				if ((this._ToQC != value))
				{
					this.OnToQCChanging(value);
					this.SendPropertyChanging();
					this._ToQC = value;
					this.SendPropertyChanged("ToQC");
					this.OnToQCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rType", DbType="NVarChar(50)")]
		public string rType
		{
			get
			{
				return this._rType;
			}
			set
			{
				if ((this._rType != value))
				{
					this.OnrTypeChanging(value);
					this.SendPropertyChanging();
					this._rType = value;
					this.SendPropertyChanged("rType");
					this.OnrTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rBody2", DbType="NVarChar(50)")]
		public string rBody2
		{
			get
			{
				return this._rBody2;
			}
			set
			{
				if ((this._rBody2 != value))
				{
					this.OnrBody2Changing(value);
					this.SendPropertyChanging();
					this._rBody2 = value;
					this.SendPropertyChanged("rBody2");
					this.OnrBody2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned", DbType="NVarChar(50)")]
		public string Assigned
		{
			get
			{
				return this._Assigned;
			}
			set
			{
				if ((this._Assigned != value))
				{
					this.OnAssignedChanging(value);
					this.SendPropertyChanging();
					this._Assigned = value;
					this.SendPropertyChanged("Assigned");
					this.OnAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignPerson", DbType="NVarChar(50)")]
		public string AssignPerson
		{
			get
			{
				return this._AssignPerson;
			}
			set
			{
				if ((this._AssignPerson != value))
				{
					this.OnAssignPersonChanging(value);
					this.SendPropertyChanging();
					this._AssignPerson = value;
					this.SendPropertyChanged("AssignPerson");
					this.OnAssignPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignPrint", DbType="NVarChar(50)")]
		public string AssignPrint
		{
			get
			{
				return this._AssignPrint;
			}
			set
			{
				if ((this._AssignPrint != value))
				{
					this.OnAssignPrintChanging(value);
					this.SendPropertyChanging();
					this._AssignPrint = value;
					this.SendPropertyChanged("AssignPrint");
					this.OnAssignPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignQC", DbType="NVarChar(50)")]
		public string AssignQC
		{
			get
			{
				return this._AssignQC;
			}
			set
			{
				if ((this._AssignQC != value))
				{
					this.OnAssignQCChanging(value);
					this.SendPropertyChanging();
					this._AssignQC = value;
					this.SendPropertyChanged("AssignQC");
					this.OnAssignQCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignUnderWriting", DbType="NVarChar(50)")]
		public string AssignUnderWriting
		{
			get
			{
				return this._AssignUnderWriting;
			}
			set
			{
				if ((this._AssignUnderWriting != value))
				{
					this.OnAssignUnderWritingChanging(value);
					this.SendPropertyChanging();
					this._AssignUnderWriting = value;
					this.SendPropertyChanged("AssignUnderWriting");
					this.OnAssignUnderWritingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogAM", DbType="NVarChar(50)")]
		public string LogAM
		{
			get
			{
				return this._LogAM;
			}
			set
			{
				if ((this._LogAM != value))
				{
					this.OnLogAMChanging(value);
					this.SendPropertyChanging();
					this._LogAM = value;
					this.SendPropertyChanged("LogAM");
					this.OnLogAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogUW", DbType="NVarChar(50)")]
		public string LogUW
		{
			get
			{
				return this._LogUW;
			}
			set
			{
				if ((this._LogUW != value))
				{
					this.OnLogUWChanging(value);
					this.SendPropertyChanging();
					this._LogUW = value;
					this.SendPropertyChanged("LogUW");
					this.OnLogUWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogIssuance", DbType="NVarChar(50)")]
		public string LogIssuance
		{
			get
			{
				return this._LogIssuance;
			}
			set
			{
				if ((this._LogIssuance != value))
				{
					this.OnLogIssuanceChanging(value);
					this.SendPropertyChanging();
					this._LogIssuance = value;
					this.SendPropertyChanged("LogIssuance");
					this.OnLogIssuanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogPrint", DbType="NVarChar(50)")]
		public string LogPrint
		{
			get
			{
				return this._LogPrint;
			}
			set
			{
				if ((this._LogPrint != value))
				{
					this.OnLogPrintChanging(value);
					this.SendPropertyChanging();
					this._LogPrint = value;
					this.SendPropertyChanged("LogPrint");
					this.OnLogPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogQC", DbType="NVarChar(50)")]
		public string LogQC
		{
			get
			{
				return this._LogQC;
			}
			set
			{
				if ((this._LogQC != value))
				{
					this.OnLogQCChanging(value);
					this.SendPropertyChanging();
					this._LogQC = value;
					this.SendPropertyChanged("LogQC");
					this.OnLogQCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confrimAM", DbType="NVarChar(50)")]
		public string confrimAM
		{
			get
			{
				return this._confrimAM;
			}
			set
			{
				if ((this._confrimAM != value))
				{
					this.OnconfrimAMChanging(value);
					this.SendPropertyChanging();
					this._confrimAM = value;
					this.SendPropertyChanged("confrimAM");
					this.OnconfrimAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfrimUW", DbType="NVarChar(50)")]
		public string ConfrimUW
		{
			get
			{
				return this._ConfrimUW;
			}
			set
			{
				if ((this._ConfrimUW != value))
				{
					this.OnConfrimUWChanging(value);
					this.SendPropertyChanging();
					this._ConfrimUW = value;
					this.SendPropertyChanged("ConfrimUW");
					this.OnConfrimUWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApvUnderWriting", DbType="NVarChar(50)")]
		public string ApvUnderWriting
		{
			get
			{
				return this._ApvUnderWriting;
			}
			set
			{
				if ((this._ApvUnderWriting != value))
				{
					this.OnApvUnderWritingChanging(value);
					this.SendPropertyChanging();
					this._ApvUnderWriting = value;
					this.SendPropertyChanged("ApvUnderWriting");
					this.OnApvUnderWritingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rBody3", DbType="NVarChar(MAX)")]
		public string rBody3
		{
			get
			{
				return this._rBody3;
			}
			set
			{
				if ((this._rBody3 != value))
				{
					this.OnrBody3Changing(value);
					this.SendPropertyChanging();
					this._rBody3 = value;
					this.SendPropertyChanged("rBody3");
					this.OnrBody3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rImgSympl", DbType="NVarChar(MAX)")]
		public string rImgSympl
		{
			get
			{
				return this._rImgSympl;
			}
			set
			{
				if ((this._rImgSympl != value))
				{
					this.OnrImgSymplChanging(value);
					this.SendPropertyChanging();
					this._rImgSympl = value;
					this.SendPropertyChanged("rImgSympl");
					this.OnrImgSymplChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aproveBy", DbType="NVarChar(50)")]
		public string aproveBy
		{
			get
			{
				return this._aproveBy;
			}
			set
			{
				if ((this._aproveBy != value))
				{
					this.OnaproveByChanging(value);
					this.SendPropertyChanging();
					this._aproveBy = value;
					this.SendPropertyChanged("aproveBy");
					this.OnaproveByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_asignTime", DbType="NVarChar(50)")]
		public string asignTime
		{
			get
			{
				return this._asignTime;
			}
			set
			{
				if ((this._asignTime != value))
				{
					this.OnasignTimeChanging(value);
					this.SendPropertyChanging();
					this._asignTime = value;
					this.SendPropertyChanged("asignTime");
					this.OnasignTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndAsigntime", DbType="NVarChar(50)")]
		public string EndAsigntime
		{
			get
			{
				return this._EndAsigntime;
			}
			set
			{
				if ((this._EndAsigntime != value))
				{
					this.OnEndAsigntimeChanging(value);
					this.SendPropertyChanging();
					this._EndAsigntime = value;
					this.SendPropertyChanged("EndAsigntime");
					this.OnEndAsigntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AsignPrintTime", DbType="NVarChar(50)")]
		public string AsignPrintTime
		{
			get
			{
				return this._AsignPrintTime;
			}
			set
			{
				if ((this._AsignPrintTime != value))
				{
					this.OnAsignPrintTimeChanging(value);
					this.SendPropertyChanging();
					this._AsignPrintTime = value;
					this.SendPropertyChanged("AsignPrintTime");
					this.OnAsignPrintTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndPrintTime", DbType="NVarChar(50)")]
		public string EndPrintTime
		{
			get
			{
				return this._EndPrintTime;
			}
			set
			{
				if ((this._EndPrintTime != value))
				{
					this.OnEndPrintTimeChanging(value);
					this.SendPropertyChanging();
					this._EndPrintTime = value;
					this.SendPropertyChanged("EndPrintTime");
					this.OnEndPrintTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AsignQTime", DbType="NVarChar(50)")]
		public string AsignQTime
		{
			get
			{
				return this._AsignQTime;
			}
			set
			{
				if ((this._AsignQTime != value))
				{
					this.OnAsignQTimeChanging(value);
					this.SendPropertyChanging();
					this._AsignQTime = value;
					this.SendPropertyChanged("AsignQTime");
					this.OnAsignQTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndAsingQTime", DbType="NVarChar(50)")]
		public string EndAsingQTime
		{
			get
			{
				return this._EndAsingQTime;
			}
			set
			{
				if ((this._EndAsingQTime != value))
				{
					this.OnEndAsingQTimeChanging(value);
					this.SendPropertyChanging();
					this._EndAsingQTime = value;
					this.SendPropertyChanged("EndAsingQTime");
					this.OnEndAsingQTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AsignDate", DbType="NVarChar(50)")]
		public string AsignDate
		{
			get
			{
				return this._AsignDate;
			}
			set
			{
				if ((this._AsignDate != value))
				{
					this.OnAsignDateChanging(value);
					this.SendPropertyChanging();
					this._AsignDate = value;
					this.SendPropertyChanged("AsignDate");
					this.OnAsignDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndAsignDate", DbType="NVarChar(50)")]
		public string EndAsignDate
		{
			get
			{
				return this._EndAsignDate;
			}
			set
			{
				if ((this._EndAsignDate != value))
				{
					this.OnEndAsignDateChanging(value);
					this.SendPropertyChanging();
					this._EndAsignDate = value;
					this.SendPropertyChanged("EndAsignDate");
					this.OnEndAsignDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APDate", DbType="NVarChar(50)")]
		public string APDate
		{
			get
			{
				return this._APDate;
			}
			set
			{
				if ((this._APDate != value))
				{
					this.OnAPDateChanging(value);
					this.SendPropertyChanging();
					this._APDate = value;
					this.SendPropertyChanged("APDate");
					this.OnAPDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPDate", DbType="NVarChar(50)")]
		public string EPDate
		{
			get
			{
				return this._EPDate;
			}
			set
			{
				if ((this._EPDate != value))
				{
					this.OnEPDateChanging(value);
					this.SendPropertyChanging();
					this._EPDate = value;
					this.SendPropertyChanged("EPDate");
					this.OnEPDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AQCDate", DbType="NVarChar(50)")]
		public string AQCDate
		{
			get
			{
				return this._AQCDate;
			}
			set
			{
				if ((this._AQCDate != value))
				{
					this.OnAQCDateChanging(value);
					this.SendPropertyChanging();
					this._AQCDate = value;
					this.SendPropertyChanged("AQCDate");
					this.OnAQCDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EQCDate", DbType="NVarChar(50)")]
		public string EQCDate
		{
			get
			{
				return this._EQCDate;
			}
			set
			{
				if ((this._EQCDate != value))
				{
					this.OnEQCDateChanging(value);
					this.SendPropertyChanging();
					this._EQCDate = value;
					this.SendPropertyChanged("EQCDate");
					this.OnEQCDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_closeNotes", DbType="NVarChar(MAX)")]
		public string closeNotes
		{
			get
			{
				return this._closeNotes;
			}
			set
			{
				if ((this._closeNotes != value))
				{
					this.OncloseNotesChanging(value);
					this.SendPropertyChanging();
					this._closeNotes = value;
					this.SendPropertyChanged("closeNotes");
					this.OncloseNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(150)")]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AComments", DbType="NVarChar(MAX)")]
		public string AComments
		{
			get
			{
				return this._AComments;
			}
			set
			{
				if ((this._AComments != value))
				{
					this.OnACommentsChanging(value);
					this.SendPropertyChanging();
					this._AComments = value;
					this.SendPropertyChanged("AComments");
					this.OnACommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PComments", DbType="NVarChar(MAX)")]
		public string PComments
		{
			get
			{
				return this._PComments;
			}
			set
			{
				if ((this._PComments != value))
				{
					this.OnPCommentsChanging(value);
					this.SendPropertyChanging();
					this._PComments = value;
					this.SendPropertyChanged("PComments");
					this.OnPCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QComments", DbType="NVarChar(MAX)")]
		public string QComments
		{
			get
			{
				return this._QComments;
			}
			set
			{
				if ((this._QComments != value))
				{
					this.OnQCommentsChanging(value);
					this.SendPropertyChanging();
					this._QComments = value;
					this.SendPropertyChanged("QComments");
					this.OnQCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exceptions", DbType="NVarChar(MAX)")]
		public string Exceptions
		{
			get
			{
				return this._Exceptions;
			}
			set
			{
				if ((this._Exceptions != value))
				{
					this.OnExceptionsChanging(value);
					this.SendPropertyChanging();
					this._Exceptions = value;
					this.SendPropertyChanged("Exceptions");
					this.OnExceptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccExcepApp", DbType="NVarChar(50)")]
		public string AccExcepApp
		{
			get
			{
				return this._AccExcepApp;
			}
			set
			{
				if ((this._AccExcepApp != value))
				{
					this.OnAccExcepAppChanging(value);
					this.SendPropertyChanging();
					this._AccExcepApp = value;
					this.SendPropertyChanged("AccExcepApp");
					this.OnAccExcepAppChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISSExcepApp", DbType="NVarChar(50)")]
		public string ISSExcepApp
		{
			get
			{
				return this._ISSExcepApp;
			}
			set
			{
				if ((this._ISSExcepApp != value))
				{
					this.OnISSExcepAppChanging(value);
					this.SendPropertyChanging();
					this._ISSExcepApp = value;
					this.SendPropertyChanged("ISSExcepApp");
					this.OnISSExcepAppChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccExcepAppDate", DbType="NVarChar(50)")]
		public string AccExcepAppDate
		{
			get
			{
				return this._AccExcepAppDate;
			}
			set
			{
				if ((this._AccExcepAppDate != value))
				{
					this.OnAccExcepAppDateChanging(value);
					this.SendPropertyChanging();
					this._AccExcepAppDate = value;
					this.SendPropertyChanged("AccExcepAppDate");
					this.OnAccExcepAppDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISSExcepAppDate", DbType="NVarChar(50)")]
		public string ISSExcepAppDate
		{
			get
			{
				return this._ISSExcepAppDate;
			}
			set
			{
				if ((this._ISSExcepAppDate != value))
				{
					this.OnISSExcepAppDateChanging(value);
					this.SendPropertyChanging();
					this._ISSExcepAppDate = value;
					this.SendPropertyChanged("ISSExcepAppDate");
					this.OnISSExcepAppDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccExcepAppUser", DbType="NVarChar(50)")]
		public string AccExcepAppUser
		{
			get
			{
				return this._AccExcepAppUser;
			}
			set
			{
				if ((this._AccExcepAppUser != value))
				{
					this.OnAccExcepAppUserChanging(value);
					this.SendPropertyChanging();
					this._AccExcepAppUser = value;
					this.SendPropertyChanged("AccExcepAppUser");
					this.OnAccExcepAppUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISSExcepAppUser", DbType="NVarChar(50)")]
		public string ISSExcepAppUser
		{
			get
			{
				return this._ISSExcepAppUser;
			}
			set
			{
				if ((this._ISSExcepAppUser != value))
				{
					this.OnISSExcepAppUserChanging(value);
					this.SendPropertyChanging();
					this._ISSExcepAppUser = value;
					this.SendPropertyChanged("ISSExcepAppUser");
					this.OnISSExcepAppUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rAccAttach", DbType="NVarChar(MAX)")]
		public string rAccAttach
		{
			get
			{
				return this._rAccAttach;
			}
			set
			{
				if ((this._rAccAttach != value))
				{
					this.OnrAccAttachChanging(value);
					this.SendPropertyChanging();
					this._rAccAttach = value;
					this.SendPropertyChanged("rAccAttach");
					this.OnrAccAttachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplainComm", DbType="NVarChar(MAX)")]
		public string ComplainComm
		{
			get
			{
				return this._ComplainComm;
			}
			set
			{
				if ((this._ComplainComm != value))
				{
					this.OnComplainCommChanging(value);
					this.SendPropertyChanging();
					this._ComplainComm = value;
					this.SendPropertyChanged("ComplainComm");
					this.OnComplainCommChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompAction", DbType="NVarChar(50)")]
		public string CompAction
		{
			get
			{
				return this._CompAction;
			}
			set
			{
				if ((this._CompAction != value))
				{
					this.OnCompActionChanging(value);
					this.SendPropertyChanging();
					this._CompAction = value;
					this.SendPropertyChanged("CompAction");
					this.OnCompActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComplainState", DbType="NVarChar(50)")]
		public string ComplainState
		{
			get
			{
				return this._ComplainState;
			}
			set
			{
				if ((this._ComplainState != value))
				{
					this.OnComplainStateChanging(value);
					this.SendPropertyChanging();
					this._ComplainState = value;
					this.SendPropertyChanged("ComplainState");
					this.OnComplainStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumOfBooklets", DbType="NVarChar(50)")]
		public string NumOfBooklets
		{
			get
			{
				return this._NumOfBooklets;
			}
			set
			{
				if ((this._NumOfBooklets != value))
				{
					this.OnNumOfBookletsChanging(value);
					this.SendPropertyChanging();
					this._NumOfBooklets = value;
					this.SendPropertyChanged("NumOfBooklets");
					this.OnNumOfBookletsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
