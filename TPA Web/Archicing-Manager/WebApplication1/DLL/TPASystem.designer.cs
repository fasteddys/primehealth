#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.DLL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TPASys")]
	public partial class TPASystemDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArchPanel(ArchPanel instance);
    partial void UpdateArchPanel(ArchPanel instance);
    partial void DeleteArchPanel(ArchPanel instance);
    partial void InsertbatchTB(batchTB instance);
    partial void UpdatebatchTB(batchTB instance);
    partial void DeletebatchTB(batchTB instance);
    partial void InsertClaimTB(ClaimTB instance);
    partial void UpdateClaimTB(ClaimTB instance);
    partial void DeleteClaimTB(ClaimTB instance);
    partial void InsertProvider(Provider instance);
    partial void UpdateProvider(Provider instance);
    partial void DeleteProvider(Provider instance);
    partial void InsertrequestTB(requestTB instance);
    partial void UpdaterequestTB(requestTB instance);
    partial void DeleterequestTB(requestTB instance);
    partial void InsertuserTB(userTB instance);
    partial void UpdateuserTB(userTB instance);
    partial void DeleteuserTB(userTB instance);
    #endregion
		
		public TPASystemDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ArchivingConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TPASystemDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TPASystemDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TPASystemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TPASystemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ArchPanel> ArchPanels
		{
			get
			{
				return this.GetTable<ArchPanel>();
			}
		}
		
		public System.Data.Linq.Table<batchTB> batchTBs
		{
			get
			{
				return this.GetTable<batchTB>();
			}
		}
		
		public System.Data.Linq.Table<ClaimTB> ClaimTBs
		{
			get
			{
				return this.GetTable<ClaimTB>();
			}
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<Provider> Providers
		{
			get
			{
				return this.GetTable<Provider>();
			}
		}
		
		public System.Data.Linq.Table<requestTB> requestTBs
		{
			get
			{
				return this.GetTable<requestTB>();
			}
		}
		
		public System.Data.Linq.Table<userTB> userTBs
		{
			get
			{
				return this.GetTable<userTB>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArchPanel")]
	public partial class ArchPanel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArchTickID;
		
		private string _Month;
		
		private string _Year;
		
		private System.Nullable<int> _TottalProviders;
		
		private string _Creator;
		
		private string _CreationTime;
		
		private string _Reciver;
		
		private string _ReciveDate;
		
		private string _ClientName;
		
		private string _Status;
		
		private string _StatusColor;
		
		private string _Pending;
		
		private string _PendingDate;
		
		private string _BackToNewPer;
		
		private string _BackToNewDate;
		
		private string _EntranceComments;
		
		private string _TottalComments;
		
		private string _ServiceType;
		
		private string _AttachFile;
		
		private System.Nullable<int> _TottalExcel;
		
		private System.Nullable<int> _TottalClaims;
		
		private string _ClosedPerson;
		
		private string _ClosedDate;
		
		private string _Assigned;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArchTickIDChanging(int value);
    partial void OnArchTickIDChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnTottalProvidersChanging(System.Nullable<int> value);
    partial void OnTottalProvidersChanged();
    partial void OnCreatorChanging(string value);
    partial void OnCreatorChanged();
    partial void OnCreationTimeChanging(string value);
    partial void OnCreationTimeChanged();
    partial void OnReciverChanging(string value);
    partial void OnReciverChanged();
    partial void OnReciveDateChanging(string value);
    partial void OnReciveDateChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnStatusColorChanging(string value);
    partial void OnStatusColorChanged();
    partial void OnPendingChanging(string value);
    partial void OnPendingChanged();
    partial void OnPendingDateChanging(string value);
    partial void OnPendingDateChanged();
    partial void OnBackToNewPerChanging(string value);
    partial void OnBackToNewPerChanged();
    partial void OnBackToNewDateChanging(string value);
    partial void OnBackToNewDateChanged();
    partial void OnEntranceCommentsChanging(string value);
    partial void OnEntranceCommentsChanged();
    partial void OnTottalCommentsChanging(string value);
    partial void OnTottalCommentsChanged();
    partial void OnServiceTypeChanging(string value);
    partial void OnServiceTypeChanged();
    partial void OnAttachFileChanging(string value);
    partial void OnAttachFileChanged();
    partial void OnTottalExcelChanging(System.Nullable<int> value);
    partial void OnTottalExcelChanged();
    partial void OnTottalClaimsChanging(System.Nullable<int> value);
    partial void OnTottalClaimsChanged();
    partial void OnClosedPersonChanging(string value);
    partial void OnClosedPersonChanged();
    partial void OnClosedDateChanging(string value);
    partial void OnClosedDateChanged();
    partial void OnAssignedChanging(string value);
    partial void OnAssignedChanged();
    #endregion
		
		public ArchPanel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchTickID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ArchTickID
		{
			get
			{
				return this._ArchTickID;
			}
			set
			{
				if ((this._ArchTickID != value))
				{
					this.OnArchTickIDChanging(value);
					this.SendPropertyChanging();
					this._ArchTickID = value;
					this.SendPropertyChanged("ArchTickID");
					this.OnArchTickIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="NVarChar(50)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="NVarChar(50)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TottalProviders", DbType="Int")]
		public System.Nullable<int> TottalProviders
		{
			get
			{
				return this._TottalProviders;
			}
			set
			{
				if ((this._TottalProviders != value))
				{
					this.OnTottalProvidersChanging(value);
					this.SendPropertyChanging();
					this._TottalProviders = value;
					this.SendPropertyChanged("TottalProviders");
					this.OnTottalProvidersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="NVarChar(50)")]
		public string Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationTime", DbType="NVarChar(50)")]
		public string CreationTime
		{
			get
			{
				return this._CreationTime;
			}
			set
			{
				if ((this._CreationTime != value))
				{
					this.OnCreationTimeChanging(value);
					this.SendPropertyChanging();
					this._CreationTime = value;
					this.SendPropertyChanged("CreationTime");
					this.OnCreationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reciver", DbType="NVarChar(50)")]
		public string Reciver
		{
			get
			{
				return this._Reciver;
			}
			set
			{
				if ((this._Reciver != value))
				{
					this.OnReciverChanging(value);
					this.SendPropertyChanging();
					this._Reciver = value;
					this.SendPropertyChanged("Reciver");
					this.OnReciverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReciveDate", DbType="NVarChar(50)")]
		public string ReciveDate
		{
			get
			{
				return this._ReciveDate;
			}
			set
			{
				if ((this._ReciveDate != value))
				{
					this.OnReciveDateChanging(value);
					this.SendPropertyChanging();
					this._ReciveDate = value;
					this.SendPropertyChanged("ReciveDate");
					this.OnReciveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(50)")]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusColor", DbType="NVarChar(50)")]
		public string StatusColor
		{
			get
			{
				return this._StatusColor;
			}
			set
			{
				if ((this._StatusColor != value))
				{
					this.OnStatusColorChanging(value);
					this.SendPropertyChanging();
					this._StatusColor = value;
					this.SendPropertyChanged("StatusColor");
					this.OnStatusColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pending", DbType="NVarChar(50)")]
		public string Pending
		{
			get
			{
				return this._Pending;
			}
			set
			{
				if ((this._Pending != value))
				{
					this.OnPendingChanging(value);
					this.SendPropertyChanging();
					this._Pending = value;
					this.SendPropertyChanged("Pending");
					this.OnPendingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingDate", DbType="NVarChar(50)")]
		public string PendingDate
		{
			get
			{
				return this._PendingDate;
			}
			set
			{
				if ((this._PendingDate != value))
				{
					this.OnPendingDateChanging(value);
					this.SendPropertyChanging();
					this._PendingDate = value;
					this.SendPropertyChanged("PendingDate");
					this.OnPendingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackToNewPer", DbType="NVarChar(50)")]
		public string BackToNewPer
		{
			get
			{
				return this._BackToNewPer;
			}
			set
			{
				if ((this._BackToNewPer != value))
				{
					this.OnBackToNewPerChanging(value);
					this.SendPropertyChanging();
					this._BackToNewPer = value;
					this.SendPropertyChanged("BackToNewPer");
					this.OnBackToNewPerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackToNewDate", DbType="NVarChar(50)")]
		public string BackToNewDate
		{
			get
			{
				return this._BackToNewDate;
			}
			set
			{
				if ((this._BackToNewDate != value))
				{
					this.OnBackToNewDateChanging(value);
					this.SendPropertyChanging();
					this._BackToNewDate = value;
					this.SendPropertyChanged("BackToNewDate");
					this.OnBackToNewDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceComments", DbType="NVarChar(MAX)")]
		public string EntranceComments
		{
			get
			{
				return this._EntranceComments;
			}
			set
			{
				if ((this._EntranceComments != value))
				{
					this.OnEntranceCommentsChanging(value);
					this.SendPropertyChanging();
					this._EntranceComments = value;
					this.SendPropertyChanged("EntranceComments");
					this.OnEntranceCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TottalComments", DbType="NVarChar(MAX)")]
		public string TottalComments
		{
			get
			{
				return this._TottalComments;
			}
			set
			{
				if ((this._TottalComments != value))
				{
					this.OnTottalCommentsChanging(value);
					this.SendPropertyChanging();
					this._TottalComments = value;
					this.SendPropertyChanged("TottalComments");
					this.OnTottalCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceType", DbType="NVarChar(50)")]
		public string ServiceType
		{
			get
			{
				return this._ServiceType;
			}
			set
			{
				if ((this._ServiceType != value))
				{
					this.OnServiceTypeChanging(value);
					this.SendPropertyChanging();
					this._ServiceType = value;
					this.SendPropertyChanged("ServiceType");
					this.OnServiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachFile", DbType="NVarChar(MAX)")]
		public string AttachFile
		{
			get
			{
				return this._AttachFile;
			}
			set
			{
				if ((this._AttachFile != value))
				{
					this.OnAttachFileChanging(value);
					this.SendPropertyChanging();
					this._AttachFile = value;
					this.SendPropertyChanged("AttachFile");
					this.OnAttachFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TottalExcel", DbType="Int")]
		public System.Nullable<int> TottalExcel
		{
			get
			{
				return this._TottalExcel;
			}
			set
			{
				if ((this._TottalExcel != value))
				{
					this.OnTottalExcelChanging(value);
					this.SendPropertyChanging();
					this._TottalExcel = value;
					this.SendPropertyChanged("TottalExcel");
					this.OnTottalExcelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TottalClaims", DbType="Int")]
		public System.Nullable<int> TottalClaims
		{
			get
			{
				return this._TottalClaims;
			}
			set
			{
				if ((this._TottalClaims != value))
				{
					this.OnTottalClaimsChanging(value);
					this.SendPropertyChanging();
					this._TottalClaims = value;
					this.SendPropertyChanged("TottalClaims");
					this.OnTottalClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedPerson", DbType="NVarChar(50)")]
		public string ClosedPerson
		{
			get
			{
				return this._ClosedPerson;
			}
			set
			{
				if ((this._ClosedPerson != value))
				{
					this.OnClosedPersonChanging(value);
					this.SendPropertyChanging();
					this._ClosedPerson = value;
					this.SendPropertyChanged("ClosedPerson");
					this.OnClosedPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedDate", DbType="NVarChar(50)")]
		public string ClosedDate
		{
			get
			{
				return this._ClosedDate;
			}
			set
			{
				if ((this._ClosedDate != value))
				{
					this.OnClosedDateChanging(value);
					this.SendPropertyChanging();
					this._ClosedDate = value;
					this.SendPropertyChanged("ClosedDate");
					this.OnClosedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned", DbType="NVarChar(50)")]
		public string Assigned
		{
			get
			{
				return this._Assigned;
			}
			set
			{
				if ((this._Assigned != value))
				{
					this.OnAssignedChanging(value);
					this.SendPropertyChanging();
					this._Assigned = value;
					this.SendPropertyChanged("Assigned");
					this.OnAssignedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.batchTB")]
	public partial class batchTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _batch;
		
		private string _box;
		
		private string _AddedBy;
		
		private string _AddTime;
		
		private System.Nullable<int> _NumOFClaims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnbatchChanging(string value);
    partial void OnbatchChanged();
    partial void OnboxChanging(string value);
    partial void OnboxChanged();
    partial void OnAddedByChanging(string value);
    partial void OnAddedByChanged();
    partial void OnAddTimeChanging(string value);
    partial void OnAddTimeChanged();
    partial void OnNumOFClaimsChanging(System.Nullable<int> value);
    partial void OnNumOFClaimsChanged();
    #endregion
		
		public batchTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batch", DbType="NVarChar(MAX)")]
		public string batch
		{
			get
			{
				return this._batch;
			}
			set
			{
				if ((this._batch != value))
				{
					this.OnbatchChanging(value);
					this.SendPropertyChanging();
					this._batch = value;
					this.SendPropertyChanged("batch");
					this.OnbatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_box", DbType="NVarChar(MAX)")]
		public string box
		{
			get
			{
				return this._box;
			}
			set
			{
				if ((this._box != value))
				{
					this.OnboxChanging(value);
					this.SendPropertyChanging();
					this._box = value;
					this.SendPropertyChanged("box");
					this.OnboxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="NVarChar(MAX)")]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="NVarChar(50)")]
		public string AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumOFClaims", DbType="Int")]
		public System.Nullable<int> NumOFClaims
		{
			get
			{
				return this._NumOFClaims;
			}
			set
			{
				if ((this._NumOFClaims != value))
				{
					this.OnNumOFClaimsChanging(value);
					this.SendPropertyChanging();
					this._NumOFClaims = value;
					this.SendPropertyChanged("NumOFClaims");
					this.OnNumOFClaimsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClaimTB")]
	public partial class ClaimTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ClaimNum;
		
		private string _BatchNum;
		
		private string _AddedBy;
		
		private string _cDate;
		
		private string _ClaimCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnClaimNumChanging(string value);
    partial void OnClaimNumChanged();
    partial void OnBatchNumChanging(string value);
    partial void OnBatchNumChanged();
    partial void OnAddedByChanging(string value);
    partial void OnAddedByChanged();
    partial void OncDateChanging(string value);
    partial void OncDateChanged();
    partial void OnClaimCodeChanging(string value);
    partial void OnClaimCodeChanged();
    #endregion
		
		public ClaimTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimNum", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ClaimNum
		{
			get
			{
				return this._ClaimNum;
			}
			set
			{
				if ((this._ClaimNum != value))
				{
					this.OnClaimNumChanging(value);
					this.SendPropertyChanging();
					this._ClaimNum = value;
					this.SendPropertyChanged("ClaimNum");
					this.OnClaimNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNum", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string BatchNum
		{
			get
			{
				return this._BatchNum;
			}
			set
			{
				if ((this._BatchNum != value))
				{
					this.OnBatchNumChanging(value);
					this.SendPropertyChanging();
					this._BatchNum = value;
					this.SendPropertyChanged("BatchNum");
					this.OnBatchNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cDate", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string cDate
		{
			get
			{
				return this._cDate;
			}
			set
			{
				if ((this._cDate != value))
				{
					this.OncDateChanging(value);
					this.SendPropertyChanging();
					this._cDate = value;
					this.SendPropertyChanged("cDate");
					this.OncDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimCode", DbType="NVarChar(150)")]
		public string ClaimCode
		{
			get
			{
				return this._ClaimCode;
			}
			set
			{
				if ((this._ClaimCode != value))
				{
					this.OnClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._ClaimCode = value;
					this.SendPropertyChanged("ClaimCode");
					this.OnClaimCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client
	{
		
		private int _ClientID;
		
		private string _ClientName;
		
		public Client()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this._ClientID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(MAX)")]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this._ClientName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Provider")]
	public partial class Provider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PId;
		
		private string _AttachPath;
		
		private string _PType;
		
		private string _ClientName;
		
		private string _PMonth;
		
		private string _PYear;
		
		private string _PName;
		
		private string _PolicyNumber;
		
		private System.Nullable<int> _TottalClaims;
		
		private string _Assigned;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPIdChanging(int value);
    partial void OnPIdChanged();
    partial void OnAttachPathChanging(string value);
    partial void OnAttachPathChanged();
    partial void OnPTypeChanging(string value);
    partial void OnPTypeChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnPMonthChanging(string value);
    partial void OnPMonthChanged();
    partial void OnPYearChanging(string value);
    partial void OnPYearChanged();
    partial void OnPNameChanging(string value);
    partial void OnPNameChanged();
    partial void OnPolicyNumberChanging(string value);
    partial void OnPolicyNumberChanged();
    partial void OnTottalClaimsChanging(System.Nullable<int> value);
    partial void OnTottalClaimsChanged();
    partial void OnAssignedChanging(string value);
    partial void OnAssignedChanged();
    #endregion
		
		public Provider()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PId
		{
			get
			{
				return this._PId;
			}
			set
			{
				if ((this._PId != value))
				{
					this.OnPIdChanging(value);
					this.SendPropertyChanging();
					this._PId = value;
					this.SendPropertyChanged("PId");
					this.OnPIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachPath", DbType="NVarChar(MAX)")]
		public string AttachPath
		{
			get
			{
				return this._AttachPath;
			}
			set
			{
				if ((this._AttachPath != value))
				{
					this.OnAttachPathChanging(value);
					this.SendPropertyChanging();
					this._AttachPath = value;
					this.SendPropertyChanged("AttachPath");
					this.OnAttachPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PType", DbType="NVarChar(50)")]
		public string PType
		{
			get
			{
				return this._PType;
			}
			set
			{
				if ((this._PType != value))
				{
					this.OnPTypeChanging(value);
					this.SendPropertyChanging();
					this._PType = value;
					this.SendPropertyChanged("PType");
					this.OnPTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(MAX)")]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMonth", DbType="NVarChar(50)")]
		public string PMonth
		{
			get
			{
				return this._PMonth;
			}
			set
			{
				if ((this._PMonth != value))
				{
					this.OnPMonthChanging(value);
					this.SendPropertyChanging();
					this._PMonth = value;
					this.SendPropertyChanged("PMonth");
					this.OnPMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PYear", DbType="NVarChar(50)")]
		public string PYear
		{
			get
			{
				return this._PYear;
			}
			set
			{
				if ((this._PYear != value))
				{
					this.OnPYearChanging(value);
					this.SendPropertyChanging();
					this._PYear = value;
					this.SendPropertyChanged("PYear");
					this.OnPYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PName", DbType="NVarChar(MAX)")]
		public string PName
		{
			get
			{
				return this._PName;
			}
			set
			{
				if ((this._PName != value))
				{
					this.OnPNameChanging(value);
					this.SendPropertyChanging();
					this._PName = value;
					this.SendPropertyChanged("PName");
					this.OnPNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyNumber", DbType="NVarChar(50)")]
		public string PolicyNumber
		{
			get
			{
				return this._PolicyNumber;
			}
			set
			{
				if ((this._PolicyNumber != value))
				{
					this.OnPolicyNumberChanging(value);
					this.SendPropertyChanging();
					this._PolicyNumber = value;
					this.SendPropertyChanged("PolicyNumber");
					this.OnPolicyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TottalClaims", DbType="Int")]
		public System.Nullable<int> TottalClaims
		{
			get
			{
				return this._TottalClaims;
			}
			set
			{
				if ((this._TottalClaims != value))
				{
					this.OnTottalClaimsChanging(value);
					this.SendPropertyChanging();
					this._TottalClaims = value;
					this.SendPropertyChanged("TottalClaims");
					this.OnTottalClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned", DbType="NVarChar(50)")]
		public string Assigned
		{
			get
			{
				return this._Assigned;
			}
			set
			{
				if ((this._Assigned != value))
				{
					this.OnAssignedChanging(value);
					this.SendPropertyChanging();
					this._Assigned = value;
					this.SendPropertyChanged("Assigned");
					this.OnAssignedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.requestTB")]
	public partial class requestTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _folderpath;
		
		private string _ClientType;
		
		private string _ClientName;
		
		private string _rStatus;
		
		private string _MissingPath;
		
		private string _FoundPath;
		
		private string _rAttach;
		
		private string _rBody;
		
		private string _PolicyNum;
		
		private string _rFrom;
		
		private System.Nullable<int> _ProviderID;
		
		private System.Nullable<int> _TottalClaims;
		
		private System.Nullable<int> _TottalFoundClaims;
		
		private System.Nullable<int> _TottalMissClaims;
		
		private System.Nullable<int> _DublicatedClaims;
		
		private System.Nullable<int> _InPatientClaims;
		
		private System.Nullable<int> _WrongClaims;
		
		private System.Nullable<int> _RejectedClaims;
		
		private System.Nullable<int> _ReceiveClaims;
		
		private string _Assigned;
		
		private string _rApproved;
		
		private string _rStatusColor;
		
		private string _AssigenPerson;
		
		private System.Nullable<System.DateTime> _AssDate;
		
		private string _rDate;
		
		private string _FinishedArchivingDate;
		
		private string _MissDate;
		
		private string _QualityPerson;
		
		private string _QDate;
		
		private string _TBAPerson;
		
		private string _ApprovedDate;
		
		private string _rAddedByType;
		
		private string _rSubject;
		
		private string _ArchivingComment;
		
		private System.Nullable<int> _TottalMoney;
		
		private System.Nullable<int> _ReturnQcCount;
		
		private string _ReturnQcPerson;
		
		private System.Nullable<int> _ReturnTPACount;
		
		private string _ReturnTPAPerson;
		
		private string _EnterComments;
		
		private string _DisplayComments;
		
		private string _AcceptDate;
		
		private string _rAccept;
		
		private string _TBAAccept;
		
		private string _TPAComments;
		
		private string _ReciveQCPerson;
		
		private string _ReciveQCDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfolderpathChanging(string value);
    partial void OnfolderpathChanged();
    partial void OnClientTypeChanging(string value);
    partial void OnClientTypeChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnrStatusChanging(string value);
    partial void OnrStatusChanged();
    partial void OnMissingPathChanging(string value);
    partial void OnMissingPathChanged();
    partial void OnFoundPathChanging(string value);
    partial void OnFoundPathChanged();
    partial void OnrAttachChanging(string value);
    partial void OnrAttachChanged();
    partial void OnrBodyChanging(string value);
    partial void OnrBodyChanged();
    partial void OnPolicyNumChanging(string value);
    partial void OnPolicyNumChanged();
    partial void OnrFromChanging(string value);
    partial void OnrFromChanged();
    partial void OnProviderIDChanging(System.Nullable<int> value);
    partial void OnProviderIDChanged();
    partial void OnTottalClaimsChanging(System.Nullable<int> value);
    partial void OnTottalClaimsChanged();
    partial void OnTottalFoundClaimsChanging(System.Nullable<int> value);
    partial void OnTottalFoundClaimsChanged();
    partial void OnTottalMissClaimsChanging(System.Nullable<int> value);
    partial void OnTottalMissClaimsChanged();
    partial void OnDublicatedClaimsChanging(System.Nullable<int> value);
    partial void OnDublicatedClaimsChanged();
    partial void OnInPatientClaimsChanging(System.Nullable<int> value);
    partial void OnInPatientClaimsChanged();
    partial void OnWrongClaimsChanging(System.Nullable<int> value);
    partial void OnWrongClaimsChanged();
    partial void OnRejectedClaimsChanging(System.Nullable<int> value);
    partial void OnRejectedClaimsChanged();
    partial void OnReceiveClaimsChanging(System.Nullable<int> value);
    partial void OnReceiveClaimsChanged();
    partial void OnAssignedChanging(string value);
    partial void OnAssignedChanged();
    partial void OnrApprovedChanging(string value);
    partial void OnrApprovedChanged();
    partial void OnrStatusColorChanging(string value);
    partial void OnrStatusColorChanged();
    partial void OnAssigenPersonChanging(string value);
    partial void OnAssigenPersonChanged();
    partial void OnAssDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAssDateChanged();
    partial void OnrDateChanging(string value);
    partial void OnrDateChanged();
    partial void OnFinishedArchivingDateChanging(string value);
    partial void OnFinishedArchivingDateChanged();
    partial void OnMissDateChanging(string value);
    partial void OnMissDateChanged();
    partial void OnQualityPersonChanging(string value);
    partial void OnQualityPersonChanged();
    partial void OnQDateChanging(string value);
    partial void OnQDateChanged();
    partial void OnTBAPersonChanging(string value);
    partial void OnTBAPersonChanged();
    partial void OnApprovedDateChanging(string value);
    partial void OnApprovedDateChanged();
    partial void OnrAddedByTypeChanging(string value);
    partial void OnrAddedByTypeChanged();
    partial void OnrSubjectChanging(string value);
    partial void OnrSubjectChanged();
    partial void OnArchivingCommentChanging(string value);
    partial void OnArchivingCommentChanged();
    partial void OnTottalMoneyChanging(System.Nullable<int> value);
    partial void OnTottalMoneyChanged();
    partial void OnReturnQcCountChanging(System.Nullable<int> value);
    partial void OnReturnQcCountChanged();
    partial void OnReturnQcPersonChanging(string value);
    partial void OnReturnQcPersonChanged();
    partial void OnReturnTPACountChanging(System.Nullable<int> value);
    partial void OnReturnTPACountChanged();
    partial void OnReturnTPAPersonChanging(string value);
    partial void OnReturnTPAPersonChanged();
    partial void OnEnterCommentsChanging(string value);
    partial void OnEnterCommentsChanged();
    partial void OnDisplayCommentsChanging(string value);
    partial void OnDisplayCommentsChanged();
    partial void OnAcceptDateChanging(string value);
    partial void OnAcceptDateChanged();
    partial void OnrAcceptChanging(string value);
    partial void OnrAcceptChanged();
    partial void OnTBAAcceptChanging(string value);
    partial void OnTBAAcceptChanged();
    partial void OnTPACommentsChanging(string value);
    partial void OnTPACommentsChanged();
    partial void OnReciveQCPersonChanging(string value);
    partial void OnReciveQCPersonChanged();
    partial void OnReciveQCDateChanging(string value);
    partial void OnReciveQCDateChanged();
    #endregion
		
		public requestTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_folderpath", DbType="NVarChar(MAX)")]
		public string folderpath
		{
			get
			{
				return this._folderpath;
			}
			set
			{
				if ((this._folderpath != value))
				{
					this.OnfolderpathChanging(value);
					this.SendPropertyChanging();
					this._folderpath = value;
					this.SendPropertyChanged("folderpath");
					this.OnfolderpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientType", DbType="NVarChar(50)")]
		public string ClientType
		{
			get
			{
				return this._ClientType;
			}
			set
			{
				if ((this._ClientType != value))
				{
					this.OnClientTypeChanging(value);
					this.SendPropertyChanging();
					this._ClientType = value;
					this.SendPropertyChanged("ClientType");
					this.OnClientTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(MAX)")]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rStatus", DbType="NVarChar(50)")]
		public string rStatus
		{
			get
			{
				return this._rStatus;
			}
			set
			{
				if ((this._rStatus != value))
				{
					this.OnrStatusChanging(value);
					this.SendPropertyChanging();
					this._rStatus = value;
					this.SendPropertyChanged("rStatus");
					this.OnrStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissingPath", DbType="NVarChar(MAX)")]
		public string MissingPath
		{
			get
			{
				return this._MissingPath;
			}
			set
			{
				if ((this._MissingPath != value))
				{
					this.OnMissingPathChanging(value);
					this.SendPropertyChanging();
					this._MissingPath = value;
					this.SendPropertyChanged("MissingPath");
					this.OnMissingPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoundPath", DbType="NVarChar(MAX)")]
		public string FoundPath
		{
			get
			{
				return this._FoundPath;
			}
			set
			{
				if ((this._FoundPath != value))
				{
					this.OnFoundPathChanging(value);
					this.SendPropertyChanging();
					this._FoundPath = value;
					this.SendPropertyChanged("FoundPath");
					this.OnFoundPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rAttach", DbType="NVarChar(MAX)")]
		public string rAttach
		{
			get
			{
				return this._rAttach;
			}
			set
			{
				if ((this._rAttach != value))
				{
					this.OnrAttachChanging(value);
					this.SendPropertyChanging();
					this._rAttach = value;
					this.SendPropertyChanged("rAttach");
					this.OnrAttachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rBody", DbType="NVarChar(MAX)")]
		public string rBody
		{
			get
			{
				return this._rBody;
			}
			set
			{
				if ((this._rBody != value))
				{
					this.OnrBodyChanging(value);
					this.SendPropertyChanging();
					this._rBody = value;
					this.SendPropertyChanged("rBody");
					this.OnrBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PolicyNum", DbType="NVarChar(50)")]
		public string PolicyNum
		{
			get
			{
				return this._PolicyNum;
			}
			set
			{
				if ((this._PolicyNum != value))
				{
					this.OnPolicyNumChanging(value);
					this.SendPropertyChanging();
					this._PolicyNum = value;
					this.SendPropertyChanged("PolicyNum");
					this.OnPolicyNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rFrom", DbType="NVarChar(MAX)")]
		public string rFrom
		{
			get
			{
				return this._rFrom;
			}
			set
			{
				if ((this._rFrom != value))
				{
					this.OnrFromChanging(value);
					this.SendPropertyChanging();
					this._rFrom = value;
					this.SendPropertyChanged("rFrom");
					this.OnrFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderID", DbType="Int")]
		public System.Nullable<int> ProviderID
		{
			get
			{
				return this._ProviderID;
			}
			set
			{
				if ((this._ProviderID != value))
				{
					this.OnProviderIDChanging(value);
					this.SendPropertyChanging();
					this._ProviderID = value;
					this.SendPropertyChanged("ProviderID");
					this.OnProviderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TottalClaims", DbType="Int")]
		public System.Nullable<int> TottalClaims
		{
			get
			{
				return this._TottalClaims;
			}
			set
			{
				if ((this._TottalClaims != value))
				{
					this.OnTottalClaimsChanging(value);
					this.SendPropertyChanging();
					this._TottalClaims = value;
					this.SendPropertyChanged("TottalClaims");
					this.OnTottalClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TottalFoundClaims", DbType="Int")]
		public System.Nullable<int> TottalFoundClaims
		{
			get
			{
				return this._TottalFoundClaims;
			}
			set
			{
				if ((this._TottalFoundClaims != value))
				{
					this.OnTottalFoundClaimsChanging(value);
					this.SendPropertyChanging();
					this._TottalFoundClaims = value;
					this.SendPropertyChanged("TottalFoundClaims");
					this.OnTottalFoundClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TottalMissClaims", DbType="Int")]
		public System.Nullable<int> TottalMissClaims
		{
			get
			{
				return this._TottalMissClaims;
			}
			set
			{
				if ((this._TottalMissClaims != value))
				{
					this.OnTottalMissClaimsChanging(value);
					this.SendPropertyChanging();
					this._TottalMissClaims = value;
					this.SendPropertyChanged("TottalMissClaims");
					this.OnTottalMissClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DublicatedClaims", DbType="Int")]
		public System.Nullable<int> DublicatedClaims
		{
			get
			{
				return this._DublicatedClaims;
			}
			set
			{
				if ((this._DublicatedClaims != value))
				{
					this.OnDublicatedClaimsChanging(value);
					this.SendPropertyChanging();
					this._DublicatedClaims = value;
					this.SendPropertyChanged("DublicatedClaims");
					this.OnDublicatedClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InPatientClaims", DbType="Int")]
		public System.Nullable<int> InPatientClaims
		{
			get
			{
				return this._InPatientClaims;
			}
			set
			{
				if ((this._InPatientClaims != value))
				{
					this.OnInPatientClaimsChanging(value);
					this.SendPropertyChanging();
					this._InPatientClaims = value;
					this.SendPropertyChanged("InPatientClaims");
					this.OnInPatientClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WrongClaims", DbType="Int")]
		public System.Nullable<int> WrongClaims
		{
			get
			{
				return this._WrongClaims;
			}
			set
			{
				if ((this._WrongClaims != value))
				{
					this.OnWrongClaimsChanging(value);
					this.SendPropertyChanging();
					this._WrongClaims = value;
					this.SendPropertyChanged("WrongClaims");
					this.OnWrongClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedClaims", DbType="Int")]
		public System.Nullable<int> RejectedClaims
		{
			get
			{
				return this._RejectedClaims;
			}
			set
			{
				if ((this._RejectedClaims != value))
				{
					this.OnRejectedClaimsChanging(value);
					this.SendPropertyChanging();
					this._RejectedClaims = value;
					this.SendPropertyChanged("RejectedClaims");
					this.OnRejectedClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveClaims", DbType="Int")]
		public System.Nullable<int> ReceiveClaims
		{
			get
			{
				return this._ReceiveClaims;
			}
			set
			{
				if ((this._ReceiveClaims != value))
				{
					this.OnReceiveClaimsChanging(value);
					this.SendPropertyChanging();
					this._ReceiveClaims = value;
					this.SendPropertyChanged("ReceiveClaims");
					this.OnReceiveClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned", DbType="NVarChar(50)")]
		public string Assigned
		{
			get
			{
				return this._Assigned;
			}
			set
			{
				if ((this._Assigned != value))
				{
					this.OnAssignedChanging(value);
					this.SendPropertyChanging();
					this._Assigned = value;
					this.SendPropertyChanged("Assigned");
					this.OnAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rApproved", DbType="NVarChar(50)")]
		public string rApproved
		{
			get
			{
				return this._rApproved;
			}
			set
			{
				if ((this._rApproved != value))
				{
					this.OnrApprovedChanging(value);
					this.SendPropertyChanging();
					this._rApproved = value;
					this.SendPropertyChanged("rApproved");
					this.OnrApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rStatusColor", DbType="NVarChar(50)")]
		public string rStatusColor
		{
			get
			{
				return this._rStatusColor;
			}
			set
			{
				if ((this._rStatusColor != value))
				{
					this.OnrStatusColorChanging(value);
					this.SendPropertyChanging();
					this._rStatusColor = value;
					this.SendPropertyChanged("rStatusColor");
					this.OnrStatusColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssigenPerson", DbType="NVarChar(50)")]
		public string AssigenPerson
		{
			get
			{
				return this._AssigenPerson;
			}
			set
			{
				if ((this._AssigenPerson != value))
				{
					this.OnAssigenPersonChanging(value);
					this.SendPropertyChanging();
					this._AssigenPerson = value;
					this.SendPropertyChanged("AssigenPerson");
					this.OnAssigenPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssDate", DbType="Date")]
		public System.Nullable<System.DateTime> AssDate
		{
			get
			{
				return this._AssDate;
			}
			set
			{
				if ((this._AssDate != value))
				{
					this.OnAssDateChanging(value);
					this.SendPropertyChanging();
					this._AssDate = value;
					this.SendPropertyChanged("AssDate");
					this.OnAssDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rDate", DbType="NVarChar(50)")]
		public string rDate
		{
			get
			{
				return this._rDate;
			}
			set
			{
				if ((this._rDate != value))
				{
					this.OnrDateChanging(value);
					this.SendPropertyChanging();
					this._rDate = value;
					this.SendPropertyChanged("rDate");
					this.OnrDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishedArchivingDate", DbType="NVarChar(50)")]
		public string FinishedArchivingDate
		{
			get
			{
				return this._FinishedArchivingDate;
			}
			set
			{
				if ((this._FinishedArchivingDate != value))
				{
					this.OnFinishedArchivingDateChanging(value);
					this.SendPropertyChanging();
					this._FinishedArchivingDate = value;
					this.SendPropertyChanged("FinishedArchivingDate");
					this.OnFinishedArchivingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissDate", DbType="NVarChar(50)")]
		public string MissDate
		{
			get
			{
				return this._MissDate;
			}
			set
			{
				if ((this._MissDate != value))
				{
					this.OnMissDateChanging(value);
					this.SendPropertyChanging();
					this._MissDate = value;
					this.SendPropertyChanged("MissDate");
					this.OnMissDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualityPerson", DbType="NVarChar(50)")]
		public string QualityPerson
		{
			get
			{
				return this._QualityPerson;
			}
			set
			{
				if ((this._QualityPerson != value))
				{
					this.OnQualityPersonChanging(value);
					this.SendPropertyChanging();
					this._QualityPerson = value;
					this.SendPropertyChanged("QualityPerson");
					this.OnQualityPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QDate", DbType="NVarChar(50)")]
		public string QDate
		{
			get
			{
				return this._QDate;
			}
			set
			{
				if ((this._QDate != value))
				{
					this.OnQDateChanging(value);
					this.SendPropertyChanging();
					this._QDate = value;
					this.SendPropertyChanged("QDate");
					this.OnQDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TBAPerson", DbType="NVarChar(50)")]
		public string TBAPerson
		{
			get
			{
				return this._TBAPerson;
			}
			set
			{
				if ((this._TBAPerson != value))
				{
					this.OnTBAPersonChanging(value);
					this.SendPropertyChanging();
					this._TBAPerson = value;
					this.SendPropertyChanged("TBAPerson");
					this.OnTBAPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="NVarChar(50)")]
		public string ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rAddedByType", DbType="NVarChar(50)")]
		public string rAddedByType
		{
			get
			{
				return this._rAddedByType;
			}
			set
			{
				if ((this._rAddedByType != value))
				{
					this.OnrAddedByTypeChanging(value);
					this.SendPropertyChanging();
					this._rAddedByType = value;
					this.SendPropertyChanged("rAddedByType");
					this.OnrAddedByTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rSubject", DbType="NVarChar(MAX)")]
		public string rSubject
		{
			get
			{
				return this._rSubject;
			}
			set
			{
				if ((this._rSubject != value))
				{
					this.OnrSubjectChanging(value);
					this.SendPropertyChanging();
					this._rSubject = value;
					this.SendPropertyChanged("rSubject");
					this.OnrSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchivingComment", DbType="NVarChar(MAX)")]
		public string ArchivingComment
		{
			get
			{
				return this._ArchivingComment;
			}
			set
			{
				if ((this._ArchivingComment != value))
				{
					this.OnArchivingCommentChanging(value);
					this.SendPropertyChanging();
					this._ArchivingComment = value;
					this.SendPropertyChanged("ArchivingComment");
					this.OnArchivingCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TottalMoney", DbType="Int")]
		public System.Nullable<int> TottalMoney
		{
			get
			{
				return this._TottalMoney;
			}
			set
			{
				if ((this._TottalMoney != value))
				{
					this.OnTottalMoneyChanging(value);
					this.SendPropertyChanging();
					this._TottalMoney = value;
					this.SendPropertyChanged("TottalMoney");
					this.OnTottalMoneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnQcCount", DbType="Int")]
		public System.Nullable<int> ReturnQcCount
		{
			get
			{
				return this._ReturnQcCount;
			}
			set
			{
				if ((this._ReturnQcCount != value))
				{
					this.OnReturnQcCountChanging(value);
					this.SendPropertyChanging();
					this._ReturnQcCount = value;
					this.SendPropertyChanged("ReturnQcCount");
					this.OnReturnQcCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnQcPerson", DbType="NVarChar(50)")]
		public string ReturnQcPerson
		{
			get
			{
				return this._ReturnQcPerson;
			}
			set
			{
				if ((this._ReturnQcPerson != value))
				{
					this.OnReturnQcPersonChanging(value);
					this.SendPropertyChanging();
					this._ReturnQcPerson = value;
					this.SendPropertyChanged("ReturnQcPerson");
					this.OnReturnQcPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnTPACount", DbType="Int")]
		public System.Nullable<int> ReturnTPACount
		{
			get
			{
				return this._ReturnTPACount;
			}
			set
			{
				if ((this._ReturnTPACount != value))
				{
					this.OnReturnTPACountChanging(value);
					this.SendPropertyChanging();
					this._ReturnTPACount = value;
					this.SendPropertyChanged("ReturnTPACount");
					this.OnReturnTPACountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnTPAPerson", DbType="NVarChar(50)")]
		public string ReturnTPAPerson
		{
			get
			{
				return this._ReturnTPAPerson;
			}
			set
			{
				if ((this._ReturnTPAPerson != value))
				{
					this.OnReturnTPAPersonChanging(value);
					this.SendPropertyChanging();
					this._ReturnTPAPerson = value;
					this.SendPropertyChanged("ReturnTPAPerson");
					this.OnReturnTPAPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterComments", DbType="NVarChar(MAX)")]
		public string EnterComments
		{
			get
			{
				return this._EnterComments;
			}
			set
			{
				if ((this._EnterComments != value))
				{
					this.OnEnterCommentsChanging(value);
					this.SendPropertyChanging();
					this._EnterComments = value;
					this.SendPropertyChanged("EnterComments");
					this.OnEnterCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayComments", DbType="NVarChar(MAX)")]
		public string DisplayComments
		{
			get
			{
				return this._DisplayComments;
			}
			set
			{
				if ((this._DisplayComments != value))
				{
					this.OnDisplayCommentsChanging(value);
					this.SendPropertyChanging();
					this._DisplayComments = value;
					this.SendPropertyChanged("DisplayComments");
					this.OnDisplayCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptDate", DbType="NVarChar(50)")]
		public string AcceptDate
		{
			get
			{
				return this._AcceptDate;
			}
			set
			{
				if ((this._AcceptDate != value))
				{
					this.OnAcceptDateChanging(value);
					this.SendPropertyChanging();
					this._AcceptDate = value;
					this.SendPropertyChanged("AcceptDate");
					this.OnAcceptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rAccept", DbType="NVarChar(50)")]
		public string rAccept
		{
			get
			{
				return this._rAccept;
			}
			set
			{
				if ((this._rAccept != value))
				{
					this.OnrAcceptChanging(value);
					this.SendPropertyChanging();
					this._rAccept = value;
					this.SendPropertyChanged("rAccept");
					this.OnrAcceptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TBAAccept", DbType="NVarChar(50)")]
		public string TBAAccept
		{
			get
			{
				return this._TBAAccept;
			}
			set
			{
				if ((this._TBAAccept != value))
				{
					this.OnTBAAcceptChanging(value);
					this.SendPropertyChanging();
					this._TBAAccept = value;
					this.SendPropertyChanged("TBAAccept");
					this.OnTBAAcceptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPAComments", DbType="NVarChar(MAX)")]
		public string TPAComments
		{
			get
			{
				return this._TPAComments;
			}
			set
			{
				if ((this._TPAComments != value))
				{
					this.OnTPACommentsChanging(value);
					this.SendPropertyChanging();
					this._TPAComments = value;
					this.SendPropertyChanged("TPAComments");
					this.OnTPACommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReciveQCPerson", DbType="NVarChar(50)")]
		public string ReciveQCPerson
		{
			get
			{
				return this._ReciveQCPerson;
			}
			set
			{
				if ((this._ReciveQCPerson != value))
				{
					this.OnReciveQCPersonChanging(value);
					this.SendPropertyChanging();
					this._ReciveQCPerson = value;
					this.SendPropertyChanged("ReciveQCPerson");
					this.OnReciveQCPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReciveQCDate", DbType="NVarChar(50)")]
		public string ReciveQCDate
		{
			get
			{
				return this._ReciveQCDate;
			}
			set
			{
				if ((this._ReciveQCDate != value))
				{
					this.OnReciveQCDateChanging(value);
					this.SendPropertyChanging();
					this._ReciveQCDate = value;
					this.SendPropertyChanged("ReciveQCDate");
					this.OnReciveQCDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userTB")]
	public partial class userTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Type;
		
		private string _IsOnline;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnIsOnlineChanging(string value);
    partial void OnIsOnlineChanged();
    #endregion
		
		public userTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(100)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="NVarChar(50)")]
		public string IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
