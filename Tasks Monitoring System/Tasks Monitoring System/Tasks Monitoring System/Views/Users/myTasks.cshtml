@model IEnumerable<TasksMonitoringSystem.UserDailsTask>

@{
    ViewBag.Title = "MyTasks";
    ViewBag.ControllerName= "Users";
    ViewBag.DailyTask = false;
    ViewBag.myTask = true;
    ViewBag.page = 2;
    double counter = 0;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class=" headerPage text-center wow fadeInDown" data-wow-duration="1s">My Tasks</h2>
@{
    Html.RenderPartial("_CompanyDropDown");
}
@*<div class="form-group row">
    @Html.LabelFor(model => model.CompanyFK, "CompanyFK", htmlAttributes: new { @class = "control-label col-md-2" })
    <label class="control-label col-md-2">Company</label>
    <div class="col-md-2">
        @Html.DropDownList("CompanyFK", null, htmlAttributes: new { @class = "form-control", onchange = "document.location.href = '/Users/" + ViewBag.Title + "?UserId="+model. = +"CID=' + this.options[this.selectedIndex].value;" })
    </div>
</div>*@

<table class="table table-striped table-bordered">
    <tr class="thead-dark">
        <th>
            @*@Html.DisplayNameFor(model => model.UserDailyTasksID)*@
            ID
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Task.CompanyDIM.CompanyName)*@
            Company
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Task.TaskName)
        </th>
        <th>
            Priority  <!--4-->
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.TasksStatusDIM.TaskStatusName)*@
            Status
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.DateOfTask)*@
            Task Data
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.AssignTime)*@
            Assign Time
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CompletedOn)
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.ClosingComment)*@
            Comment
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    var timeDelay = counter.ToString() + 's';

    <tr class="wow flipInX " data-wow-duration="2s" data-wow-delay=@timeDelay>
        <td>
            @Html.DisplayFor(modelItem => item.UserDailyTasksID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Task.CompanyDIM.CompanyName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Task.TaskName)
        </td>
        @if (item.Task.PriorityFK == 1)
        {
            <td class="text-primary">
                @Html.DisplayFor(modelItem => item.Task.PriorityTypeDIM.PriorityTypeName)
            </td>
        }
        else if (item.Task.PriorityFK == 2)
        {
            <td class="text-warning">
                @Html.DisplayFor(modelItem => item.Task.PriorityTypeDIM.PriorityTypeName)
            </td>
        }
        else if (item.Task.PriorityFK == 3)
        {
            <td class="text-danger">
                @Html.DisplayFor(modelItem => item.Task.PriorityTypeDIM.PriorityTypeName)
            </td>
        }
        <td>
            @Html.DisplayFor(modelItem => item.TasksStatusDIM.TaskStatusName)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.DateOfTask)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AssignTime)
        </td>

        <td>
            @Html.DisplayFor(modelItem => item.CompletedOn)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ClosingComment)
        </td>

        <td>
          
            @if (item.CompletedOn != null)
            {
                @Html.ActionLink("Done", "", new { id = item.UserDailyTasksID }, new { @class = "btn btn-success  hvr-wobble-bottom", @onclick = "javascript:return false;" })

            }
            else
            {
                @*@Html.ActionLink("Assigned", "taskFinished", "UserDailsTasks", new { id = item.UserDailyTasksID }, new { @class = "btn btn-danger sweet-prompt" })*@

            <a class="btn btn-primary sweet-prompt hvr-wobble-horizontal" onclick="AssignTask('@item.UserDailyTasksID')">Assigned</a>
            }
        </td>
    </tr>
    counter += .2;

}

</table>

