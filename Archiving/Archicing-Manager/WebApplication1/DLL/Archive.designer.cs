#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.DLL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Archiving")]
	public partial class ArchiveDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertOutpatient(Outpatient instance);
    partial void UpdateOutpatient(Outpatient instance);
    partial void DeleteOutpatient(Outpatient instance);
    partial void Insertremb(remb instance);
    partial void Updateremb(remb instance);
    partial void Deleteremb(remb instance);
    partial void InsertrequestTB(requestTB instance);
    partial void UpdaterequestTB(requestTB instance);
    partial void DeleterequestTB(requestTB instance);
    partial void InsertsubmissionrequestTB(submissionrequestTB instance);
    partial void UpdatesubmissionrequestTB(submissionrequestTB instance);
    partial void DeletesubmissionrequestTB(submissionrequestTB instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void InsertuserTB(userTB instance);
    partial void UpdateuserTB(userTB instance);
    partial void DeleteuserTB(userTB instance);
    #endregion
		
		public ArchiveDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ArchivingConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ArchiveDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ArchiveDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ArchiveDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ArchiveDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Outpatient> Outpatients
		{
			get
			{
				return this.GetTable<Outpatient>();
			}
		}
		
		public System.Data.Linq.Table<remb> rembs
		{
			get
			{
				return this.GetTable<remb>();
			}
		}
		
		public System.Data.Linq.Table<requestTB> requestTBs
		{
			get
			{
				return this.GetTable<requestTB>();
			}
		}
		
		public System.Data.Linq.Table<submissionrequestTB> submissionrequestTBs
		{
			get
			{
				return this.GetTable<submissionrequestTB>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<userTB> userTBs
		{
			get
			{
				return this.GetTable<userTB>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Outpatient")]
	public partial class Outpatient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BoxID;
		
		private string _BatchID;
		
		private string _ClaimCode;
		
		private string _SetID;
		
		private string _AddedBy;
		
		private string _NumOfClaims;
		
		private System.Nullable<System.DateTime> _AddTime;
		
		private int _ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBoxIDChanging(string value);
    partial void OnBoxIDChanged();
    partial void OnBatchIDChanging(string value);
    partial void OnBatchIDChanged();
    partial void OnClaimCodeChanging(string value);
    partial void OnClaimCodeChanged();
    partial void OnSetIDChanging(string value);
    partial void OnSetIDChanged();
    partial void OnAddedByChanging(string value);
    partial void OnAddedByChanged();
    partial void OnNumOfClaimsChanging(string value);
    partial void OnNumOfClaimsChanged();
    partial void OnAddTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAddTimeChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public Outpatient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoxID", DbType="NVarChar(MAX)")]
		public string BoxID
		{
			get
			{
				return this._BoxID;
			}
			set
			{
				if ((this._BoxID != value))
				{
					this.OnBoxIDChanging(value);
					this.SendPropertyChanging();
					this._BoxID = value;
					this.SendPropertyChanged("BoxID");
					this.OnBoxIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchID", DbType="NVarChar(MAX)")]
		public string BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimCode", DbType="NVarChar(MAX)")]
		public string ClaimCode
		{
			get
			{
				return this._ClaimCode;
			}
			set
			{
				if ((this._ClaimCode != value))
				{
					this.OnClaimCodeChanging(value);
					this.SendPropertyChanging();
					this._ClaimCode = value;
					this.SendPropertyChanged("ClaimCode");
					this.OnClaimCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetID", DbType="NVarChar(MAX)")]
		public string SetID
		{
			get
			{
				return this._SetID;
			}
			set
			{
				if ((this._SetID != value))
				{
					this.OnSetIDChanging(value);
					this.SendPropertyChanging();
					this._SetID = value;
					this.SendPropertyChanged("SetID");
					this.OnSetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="NVarChar(MAX)")]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumOfClaims", DbType="NVarChar(MAX)")]
		public string NumOfClaims
		{
			get
			{
				return this._NumOfClaims;
			}
			set
			{
				if ((this._NumOfClaims != value))
				{
					this.OnNumOfClaimsChanging(value);
					this.SendPropertyChanging();
					this._NumOfClaims = value;
					this.SendPropertyChanged("NumOfClaims");
					this.OnNumOfClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.remb")]
	public partial class remb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BoxID;
		
		private string _BatchID;
		
		private string _Comment;
		
		private string _AddedBy;
		
		private System.Nullable<System.DateTime> _AddTime;
		
		private int _ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBoxIDChanging(string value);
    partial void OnBoxIDChanged();
    partial void OnBatchIDChanging(string value);
    partial void OnBatchIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnAddedByChanging(string value);
    partial void OnAddedByChanged();
    partial void OnAddTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAddTimeChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public remb()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoxID", DbType="NVarChar(MAX)")]
		public string BoxID
		{
			get
			{
				return this._BoxID;
			}
			set
			{
				if ((this._BoxID != value))
				{
					this.OnBoxIDChanging(value);
					this.SendPropertyChanging();
					this._BoxID = value;
					this.SendPropertyChanged("BoxID");
					this.OnBoxIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchID", DbType="NVarChar(MAX)")]
		public string BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="NVarChar(MAX)")]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.requestTB")]
	public partial class requestTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _rSubject;
		
		private string _rFrom;
		
		private System.Nullable<System.DateTime> _rDate;
		
		private string _rStatus;
		
		private string _AssigenPerson;
		
		private System.Nullable<System.DateTime> _AssignedTime;
		
		private System.Nullable<System.DateTime> _FinishedArchivingDate;
		
		private System.Nullable<System.DateTime> _ApprovedDate;
		
		private System.Nullable<System.DateTime> _PendingCliamsStart;
		
		private System.Nullable<System.DateTime> _PendingClaimsEnd;
		
		private string _rBody;
		
		private string _rAttach;
		
		private string _rApproved;
		
		private string _rStatusColor;
		
		private string _Assigned;
		
		private string _ArchivingComment;
		
		private string _rAddedByType;
		
		private string _RembConfirm;
		
		private System.Nullable<int> _NumberOfReqClaims;
		
		private System.Nullable<int> _NumberOfFoundClaims;
		
		private string _Reply;
		
		private string _PendClaimsassignee;
		
		private string _pendingclaims;
		
		private string _pendingcomments;
		
		private string _pendingassigned;
		
		private System.Nullable<System.DateTime> _submittedbyrembtime;
		
		private string _sumbited;
		
		private string _userpendingclaimscomment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnrSubjectChanging(string value);
    partial void OnrSubjectChanged();
    partial void OnrFromChanging(string value);
    partial void OnrFromChanged();
    partial void OnrDateChanging(System.Nullable<System.DateTime> value);
    partial void OnrDateChanged();
    partial void OnrStatusChanging(string value);
    partial void OnrStatusChanged();
    partial void OnAssigenPersonChanging(string value);
    partial void OnAssigenPersonChanged();
    partial void OnAssignedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAssignedTimeChanged();
    partial void OnFinishedArchivingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishedArchivingDateChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnPendingCliamsStartChanging(System.Nullable<System.DateTime> value);
    partial void OnPendingCliamsStartChanged();
    partial void OnPendingClaimsEndChanging(System.Nullable<System.DateTime> value);
    partial void OnPendingClaimsEndChanged();
    partial void OnrBodyChanging(string value);
    partial void OnrBodyChanged();
    partial void OnrAttachChanging(string value);
    partial void OnrAttachChanged();
    partial void OnrApprovedChanging(string value);
    partial void OnrApprovedChanged();
    partial void OnrStatusColorChanging(string value);
    partial void OnrStatusColorChanged();
    partial void OnAssignedChanging(string value);
    partial void OnAssignedChanged();
    partial void OnArchivingCommentChanging(string value);
    partial void OnArchivingCommentChanged();
    partial void OnrAddedByTypeChanging(string value);
    partial void OnrAddedByTypeChanged();
    partial void OnRembConfirmChanging(string value);
    partial void OnRembConfirmChanged();
    partial void OnNumberOfReqClaimsChanging(System.Nullable<int> value);
    partial void OnNumberOfReqClaimsChanged();
    partial void OnNumberOfFoundClaimsChanging(System.Nullable<int> value);
    partial void OnNumberOfFoundClaimsChanged();
    partial void OnReplyChanging(string value);
    partial void OnReplyChanged();
    partial void OnPendClaimsassigneeChanging(string value);
    partial void OnPendClaimsassigneeChanged();
    partial void OnpendingclaimsChanging(string value);
    partial void OnpendingclaimsChanged();
    partial void OnpendingcommentsChanging(string value);
    partial void OnpendingcommentsChanged();
    partial void OnpendingassignedChanging(string value);
    partial void OnpendingassignedChanged();
    partial void OnsubmittedbyrembtimeChanging(System.Nullable<System.DateTime> value);
    partial void OnsubmittedbyrembtimeChanged();
    partial void OnsumbitedChanging(string value);
    partial void OnsumbitedChanged();
    partial void OnuserpendingclaimscommentChanging(string value);
    partial void OnuserpendingclaimscommentChanged();
    #endregion
		
		public requestTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rSubject", DbType="NVarChar(MAX)")]
		public string rSubject
		{
			get
			{
				return this._rSubject;
			}
			set
			{
				if ((this._rSubject != value))
				{
					this.OnrSubjectChanging(value);
					this.SendPropertyChanging();
					this._rSubject = value;
					this.SendPropertyChanged("rSubject");
					this.OnrSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rFrom", DbType="NVarChar(MAX)")]
		public string rFrom
		{
			get
			{
				return this._rFrom;
			}
			set
			{
				if ((this._rFrom != value))
				{
					this.OnrFromChanging(value);
					this.SendPropertyChanging();
					this._rFrom = value;
					this.SendPropertyChanged("rFrom");
					this.OnrFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> rDate
		{
			get
			{
				return this._rDate;
			}
			set
			{
				if ((this._rDate != value))
				{
					this.OnrDateChanging(value);
					this.SendPropertyChanging();
					this._rDate = value;
					this.SendPropertyChanged("rDate");
					this.OnrDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rStatus", DbType="NVarChar(50)")]
		public string rStatus
		{
			get
			{
				return this._rStatus;
			}
			set
			{
				if ((this._rStatus != value))
				{
					this.OnrStatusChanging(value);
					this.SendPropertyChanging();
					this._rStatus = value;
					this.SendPropertyChanged("rStatus");
					this.OnrStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssigenPerson", DbType="NVarChar(50)")]
		public string AssigenPerson
		{
			get
			{
				return this._AssigenPerson;
			}
			set
			{
				if ((this._AssigenPerson != value))
				{
					this.OnAssigenPersonChanging(value);
					this.SendPropertyChanging();
					this._AssigenPerson = value;
					this.SendPropertyChanged("AssigenPerson");
					this.OnAssigenPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignedTime
		{
			get
			{
				return this._AssignedTime;
			}
			set
			{
				if ((this._AssignedTime != value))
				{
					this.OnAssignedTimeChanging(value);
					this.SendPropertyChanging();
					this._AssignedTime = value;
					this.SendPropertyChanged("AssignedTime");
					this.OnAssignedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishedArchivingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishedArchivingDate
		{
			get
			{
				return this._FinishedArchivingDate;
			}
			set
			{
				if ((this._FinishedArchivingDate != value))
				{
					this.OnFinishedArchivingDateChanging(value);
					this.SendPropertyChanging();
					this._FinishedArchivingDate = value;
					this.SendPropertyChanged("FinishedArchivingDate");
					this.OnFinishedArchivingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingCliamsStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> PendingCliamsStart
		{
			get
			{
				return this._PendingCliamsStart;
			}
			set
			{
				if ((this._PendingCliamsStart != value))
				{
					this.OnPendingCliamsStartChanging(value);
					this.SendPropertyChanging();
					this._PendingCliamsStart = value;
					this.SendPropertyChanged("PendingCliamsStart");
					this.OnPendingCliamsStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingClaimsEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> PendingClaimsEnd
		{
			get
			{
				return this._PendingClaimsEnd;
			}
			set
			{
				if ((this._PendingClaimsEnd != value))
				{
					this.OnPendingClaimsEndChanging(value);
					this.SendPropertyChanging();
					this._PendingClaimsEnd = value;
					this.SendPropertyChanged("PendingClaimsEnd");
					this.OnPendingClaimsEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rBody", DbType="NVarChar(MAX)")]
		public string rBody
		{
			get
			{
				return this._rBody;
			}
			set
			{
				if ((this._rBody != value))
				{
					this.OnrBodyChanging(value);
					this.SendPropertyChanging();
					this._rBody = value;
					this.SendPropertyChanged("rBody");
					this.OnrBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rAttach", DbType="NVarChar(MAX)")]
		public string rAttach
		{
			get
			{
				return this._rAttach;
			}
			set
			{
				if ((this._rAttach != value))
				{
					this.OnrAttachChanging(value);
					this.SendPropertyChanging();
					this._rAttach = value;
					this.SendPropertyChanged("rAttach");
					this.OnrAttachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rApproved", DbType="NVarChar(50)")]
		public string rApproved
		{
			get
			{
				return this._rApproved;
			}
			set
			{
				if ((this._rApproved != value))
				{
					this.OnrApprovedChanging(value);
					this.SendPropertyChanging();
					this._rApproved = value;
					this.SendPropertyChanged("rApproved");
					this.OnrApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rStatusColor", DbType="NVarChar(50)")]
		public string rStatusColor
		{
			get
			{
				return this._rStatusColor;
			}
			set
			{
				if ((this._rStatusColor != value))
				{
					this.OnrStatusColorChanging(value);
					this.SendPropertyChanging();
					this._rStatusColor = value;
					this.SendPropertyChanged("rStatusColor");
					this.OnrStatusColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned", DbType="NVarChar(50)")]
		public string Assigned
		{
			get
			{
				return this._Assigned;
			}
			set
			{
				if ((this._Assigned != value))
				{
					this.OnAssignedChanging(value);
					this.SendPropertyChanging();
					this._Assigned = value;
					this.SendPropertyChanged("Assigned");
					this.OnAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchivingComment", DbType="NVarChar(MAX)")]
		public string ArchivingComment
		{
			get
			{
				return this._ArchivingComment;
			}
			set
			{
				if ((this._ArchivingComment != value))
				{
					this.OnArchivingCommentChanging(value);
					this.SendPropertyChanging();
					this._ArchivingComment = value;
					this.SendPropertyChanged("ArchivingComment");
					this.OnArchivingCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rAddedByType", DbType="NVarChar(50)")]
		public string rAddedByType
		{
			get
			{
				return this._rAddedByType;
			}
			set
			{
				if ((this._rAddedByType != value))
				{
					this.OnrAddedByTypeChanging(value);
					this.SendPropertyChanging();
					this._rAddedByType = value;
					this.SendPropertyChanged("rAddedByType");
					this.OnrAddedByTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RembConfirm", DbType="NVarChar(50)")]
		public string RembConfirm
		{
			get
			{
				return this._RembConfirm;
			}
			set
			{
				if ((this._RembConfirm != value))
				{
					this.OnRembConfirmChanging(value);
					this.SendPropertyChanging();
					this._RembConfirm = value;
					this.SendPropertyChanged("RembConfirm");
					this.OnRembConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfReqClaims", DbType="Int")]
		public System.Nullable<int> NumberOfReqClaims
		{
			get
			{
				return this._NumberOfReqClaims;
			}
			set
			{
				if ((this._NumberOfReqClaims != value))
				{
					this.OnNumberOfReqClaimsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfReqClaims = value;
					this.SendPropertyChanged("NumberOfReqClaims");
					this.OnNumberOfReqClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfFoundClaims", DbType="Int")]
		public System.Nullable<int> NumberOfFoundClaims
		{
			get
			{
				return this._NumberOfFoundClaims;
			}
			set
			{
				if ((this._NumberOfFoundClaims != value))
				{
					this.OnNumberOfFoundClaimsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfFoundClaims = value;
					this.SendPropertyChanged("NumberOfFoundClaims");
					this.OnNumberOfFoundClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reply", DbType="NVarChar(MAX)")]
		public string Reply
		{
			get
			{
				return this._Reply;
			}
			set
			{
				if ((this._Reply != value))
				{
					this.OnReplyChanging(value);
					this.SendPropertyChanging();
					this._Reply = value;
					this.SendPropertyChanged("Reply");
					this.OnReplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendClaimsassignee", DbType="NVarChar(50)")]
		public string PendClaimsassignee
		{
			get
			{
				return this._PendClaimsassignee;
			}
			set
			{
				if ((this._PendClaimsassignee != value))
				{
					this.OnPendClaimsassigneeChanging(value);
					this.SendPropertyChanging();
					this._PendClaimsassignee = value;
					this.SendPropertyChanged("PendClaimsassignee");
					this.OnPendClaimsassigneeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pendingclaims", DbType="NVarChar(50)")]
		public string pendingclaims
		{
			get
			{
				return this._pendingclaims;
			}
			set
			{
				if ((this._pendingclaims != value))
				{
					this.OnpendingclaimsChanging(value);
					this.SendPropertyChanging();
					this._pendingclaims = value;
					this.SendPropertyChanged("pendingclaims");
					this.OnpendingclaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pendingcomments", DbType="NVarChar(MAX)")]
		public string pendingcomments
		{
			get
			{
				return this._pendingcomments;
			}
			set
			{
				if ((this._pendingcomments != value))
				{
					this.OnpendingcommentsChanging(value);
					this.SendPropertyChanging();
					this._pendingcomments = value;
					this.SendPropertyChanged("pendingcomments");
					this.OnpendingcommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pendingassigned", DbType="NVarChar(50)")]
		public string pendingassigned
		{
			get
			{
				return this._pendingassigned;
			}
			set
			{
				if ((this._pendingassigned != value))
				{
					this.OnpendingassignedChanging(value);
					this.SendPropertyChanging();
					this._pendingassigned = value;
					this.SendPropertyChanged("pendingassigned");
					this.OnpendingassignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submittedbyrembtime", DbType="DateTime")]
		public System.Nullable<System.DateTime> submittedbyrembtime
		{
			get
			{
				return this._submittedbyrembtime;
			}
			set
			{
				if ((this._submittedbyrembtime != value))
				{
					this.OnsubmittedbyrembtimeChanging(value);
					this.SendPropertyChanging();
					this._submittedbyrembtime = value;
					this.SendPropertyChanged("submittedbyrembtime");
					this.OnsubmittedbyrembtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sumbited", DbType="NVarChar(50)")]
		public string sumbited
		{
			get
			{
				return this._sumbited;
			}
			set
			{
				if ((this._sumbited != value))
				{
					this.OnsumbitedChanging(value);
					this.SendPropertyChanging();
					this._sumbited = value;
					this.SendPropertyChanged("sumbited");
					this.OnsumbitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userpendingclaimscomment", DbType="NVarChar(MAX)")]
		public string userpendingclaimscomment
		{
			get
			{
				return this._userpendingclaimscomment;
			}
			set
			{
				if ((this._userpendingclaimscomment != value))
				{
					this.OnuserpendingclaimscommentChanging(value);
					this.SendPropertyChanging();
					this._userpendingclaimscomment = value;
					this.SendPropertyChanged("userpendingclaimscomment");
					this.OnuserpendingclaimscommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.submissionrequestTB")]
	public partial class submissionrequestTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _rSubject;
		
		private string _rFrom;
		
		private System.Nullable<System.DateTime> _rDate;
		
		private string _rStatus;
		
		private string _AssigenPerson;
		
		private System.Nullable<System.DateTime> _AssignedTime;
		
		private System.Nullable<System.DateTime> _FinishedArchivingDate;
		
		private System.Nullable<System.DateTime> _ApprovedDate;
		
		private System.Nullable<System.DateTime> _ConfirmTime;
		
		private string _rBody;
		
		private string _rApproved;
		
		private string _rStatusColor;
		
		private string _Assigned;
		
		private string _ArchivingComment;
		
		private System.Nullable<int> _NumberSentOfBatches;
		
		private System.Nullable<int> _NumberSentOfRecBatches;
		
		private System.Nullable<int> _NumberOfRecClaims;
		
		private string _confirmed;
		
		private string _Submittype;
		
		private string _Month;
		
		private string _Year;
		
		private string _ClosedBy;
		
		private string _TPAcomment;
		
		private string _PendingTPABy;
		
		private System.Nullable<System.DateTime> _PendingTPAByTime;
		
		private string _AttachedPath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnrSubjectChanging(string value);
    partial void OnrSubjectChanged();
    partial void OnrFromChanging(string value);
    partial void OnrFromChanged();
    partial void OnrDateChanging(System.Nullable<System.DateTime> value);
    partial void OnrDateChanged();
    partial void OnrStatusChanging(string value);
    partial void OnrStatusChanged();
    partial void OnAssigenPersonChanging(string value);
    partial void OnAssigenPersonChanged();
    partial void OnAssignedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAssignedTimeChanged();
    partial void OnFinishedArchivingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishedArchivingDateChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnConfirmTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmTimeChanged();
    partial void OnrBodyChanging(string value);
    partial void OnrBodyChanged();
    partial void OnrApprovedChanging(string value);
    partial void OnrApprovedChanged();
    partial void OnrStatusColorChanging(string value);
    partial void OnrStatusColorChanged();
    partial void OnAssignedChanging(string value);
    partial void OnAssignedChanged();
    partial void OnArchivingCommentChanging(string value);
    partial void OnArchivingCommentChanged();
    partial void OnNumberSentOfBatchesChanging(System.Nullable<int> value);
    partial void OnNumberSentOfBatchesChanged();
    partial void OnNumberSentOfRecBatchesChanging(System.Nullable<int> value);
    partial void OnNumberSentOfRecBatchesChanged();
    partial void OnNumberOfRecClaimsChanging(System.Nullable<int> value);
    partial void OnNumberOfRecClaimsChanged();
    partial void OnconfirmedChanging(string value);
    partial void OnconfirmedChanged();
    partial void OnSubmittypeChanging(string value);
    partial void OnSubmittypeChanged();
    partial void OnMonthChanging(string value);
    partial void OnMonthChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnClosedByChanging(string value);
    partial void OnClosedByChanged();
    partial void OnTPAcommentChanging(string value);
    partial void OnTPAcommentChanged();
    partial void OnPendingTPAByChanging(string value);
    partial void OnPendingTPAByChanged();
    partial void OnPendingTPAByTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPendingTPAByTimeChanged();
    partial void OnAttachedPathChanging(string value);
    partial void OnAttachedPathChanged();
    #endregion
		
		public submissionrequestTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rSubject", DbType="NVarChar(MAX)")]
		public string rSubject
		{
			get
			{
				return this._rSubject;
			}
			set
			{
				if ((this._rSubject != value))
				{
					this.OnrSubjectChanging(value);
					this.SendPropertyChanging();
					this._rSubject = value;
					this.SendPropertyChanged("rSubject");
					this.OnrSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rFrom", DbType="NVarChar(MAX)")]
		public string rFrom
		{
			get
			{
				return this._rFrom;
			}
			set
			{
				if ((this._rFrom != value))
				{
					this.OnrFromChanging(value);
					this.SendPropertyChanging();
					this._rFrom = value;
					this.SendPropertyChanged("rFrom");
					this.OnrFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> rDate
		{
			get
			{
				return this._rDate;
			}
			set
			{
				if ((this._rDate != value))
				{
					this.OnrDateChanging(value);
					this.SendPropertyChanging();
					this._rDate = value;
					this.SendPropertyChanged("rDate");
					this.OnrDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rStatus", DbType="NVarChar(50)")]
		public string rStatus
		{
			get
			{
				return this._rStatus;
			}
			set
			{
				if ((this._rStatus != value))
				{
					this.OnrStatusChanging(value);
					this.SendPropertyChanging();
					this._rStatus = value;
					this.SendPropertyChanged("rStatus");
					this.OnrStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssigenPerson", DbType="NVarChar(50)")]
		public string AssigenPerson
		{
			get
			{
				return this._AssigenPerson;
			}
			set
			{
				if ((this._AssigenPerson != value))
				{
					this.OnAssigenPersonChanging(value);
					this.SendPropertyChanging();
					this._AssigenPerson = value;
					this.SendPropertyChanged("AssigenPerson");
					this.OnAssigenPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssignedTime
		{
			get
			{
				return this._AssignedTime;
			}
			set
			{
				if ((this._AssignedTime != value))
				{
					this.OnAssignedTimeChanging(value);
					this.SendPropertyChanging();
					this._AssignedTime = value;
					this.SendPropertyChanged("AssignedTime");
					this.OnAssignedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishedArchivingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishedArchivingDate
		{
			get
			{
				return this._FinishedArchivingDate;
			}
			set
			{
				if ((this._FinishedArchivingDate != value))
				{
					this.OnFinishedArchivingDateChanging(value);
					this.SendPropertyChanging();
					this._FinishedArchivingDate = value;
					this.SendPropertyChanged("FinishedArchivingDate");
					this.OnFinishedArchivingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmTime
		{
			get
			{
				return this._ConfirmTime;
			}
			set
			{
				if ((this._ConfirmTime != value))
				{
					this.OnConfirmTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmTime = value;
					this.SendPropertyChanged("ConfirmTime");
					this.OnConfirmTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rBody", DbType="NVarChar(MAX)")]
		public string rBody
		{
			get
			{
				return this._rBody;
			}
			set
			{
				if ((this._rBody != value))
				{
					this.OnrBodyChanging(value);
					this.SendPropertyChanging();
					this._rBody = value;
					this.SendPropertyChanged("rBody");
					this.OnrBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rApproved", DbType="NVarChar(50)")]
		public string rApproved
		{
			get
			{
				return this._rApproved;
			}
			set
			{
				if ((this._rApproved != value))
				{
					this.OnrApprovedChanging(value);
					this.SendPropertyChanging();
					this._rApproved = value;
					this.SendPropertyChanged("rApproved");
					this.OnrApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rStatusColor", DbType="NVarChar(50)")]
		public string rStatusColor
		{
			get
			{
				return this._rStatusColor;
			}
			set
			{
				if ((this._rStatusColor != value))
				{
					this.OnrStatusColorChanging(value);
					this.SendPropertyChanging();
					this._rStatusColor = value;
					this.SendPropertyChanged("rStatusColor");
					this.OnrStatusColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assigned", DbType="NVarChar(50)")]
		public string Assigned
		{
			get
			{
				return this._Assigned;
			}
			set
			{
				if ((this._Assigned != value))
				{
					this.OnAssignedChanging(value);
					this.SendPropertyChanging();
					this._Assigned = value;
					this.SendPropertyChanged("Assigned");
					this.OnAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchivingComment", DbType="NVarChar(MAX)")]
		public string ArchivingComment
		{
			get
			{
				return this._ArchivingComment;
			}
			set
			{
				if ((this._ArchivingComment != value))
				{
					this.OnArchivingCommentChanging(value);
					this.SendPropertyChanging();
					this._ArchivingComment = value;
					this.SendPropertyChanged("ArchivingComment");
					this.OnArchivingCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberSentOfBatches", DbType="Int")]
		public System.Nullable<int> NumberSentOfBatches
		{
			get
			{
				return this._NumberSentOfBatches;
			}
			set
			{
				if ((this._NumberSentOfBatches != value))
				{
					this.OnNumberSentOfBatchesChanging(value);
					this.SendPropertyChanging();
					this._NumberSentOfBatches = value;
					this.SendPropertyChanged("NumberSentOfBatches");
					this.OnNumberSentOfBatchesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberSentOfRecBatches", DbType="Int")]
		public System.Nullable<int> NumberSentOfRecBatches
		{
			get
			{
				return this._NumberSentOfRecBatches;
			}
			set
			{
				if ((this._NumberSentOfRecBatches != value))
				{
					this.OnNumberSentOfRecBatchesChanging(value);
					this.SendPropertyChanging();
					this._NumberSentOfRecBatches = value;
					this.SendPropertyChanged("NumberSentOfRecBatches");
					this.OnNumberSentOfRecBatchesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfRecClaims", DbType="Int")]
		public System.Nullable<int> NumberOfRecClaims
		{
			get
			{
				return this._NumberOfRecClaims;
			}
			set
			{
				if ((this._NumberOfRecClaims != value))
				{
					this.OnNumberOfRecClaimsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfRecClaims = value;
					this.SendPropertyChanged("NumberOfRecClaims");
					this.OnNumberOfRecClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmed", DbType="NVarChar(50)")]
		public string confirmed
		{
			get
			{
				return this._confirmed;
			}
			set
			{
				if ((this._confirmed != value))
				{
					this.OnconfirmedChanging(value);
					this.SendPropertyChanging();
					this._confirmed = value;
					this.SendPropertyChanged("confirmed");
					this.OnconfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Submittype", DbType="NVarChar(50)")]
		public string Submittype
		{
			get
			{
				return this._Submittype;
			}
			set
			{
				if ((this._Submittype != value))
				{
					this.OnSubmittypeChanging(value);
					this.SendPropertyChanging();
					this._Submittype = value;
					this.SendPropertyChanged("Submittype");
					this.OnSubmittypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="NVarChar(50)")]
		public string Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="NVarChar(50)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedBy", DbType="NVarChar(50)")]
		public string ClosedBy
		{
			get
			{
				return this._ClosedBy;
			}
			set
			{
				if ((this._ClosedBy != value))
				{
					this.OnClosedByChanging(value);
					this.SendPropertyChanging();
					this._ClosedBy = value;
					this.SendPropertyChanged("ClosedBy");
					this.OnClosedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TPAcomment", DbType="NVarChar(MAX)")]
		public string TPAcomment
		{
			get
			{
				return this._TPAcomment;
			}
			set
			{
				if ((this._TPAcomment != value))
				{
					this.OnTPAcommentChanging(value);
					this.SendPropertyChanging();
					this._TPAcomment = value;
					this.SendPropertyChanged("TPAcomment");
					this.OnTPAcommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingTPABy", DbType="NVarChar(50)")]
		public string PendingTPABy
		{
			get
			{
				return this._PendingTPABy;
			}
			set
			{
				if ((this._PendingTPABy != value))
				{
					this.OnPendingTPAByChanging(value);
					this.SendPropertyChanging();
					this._PendingTPABy = value;
					this.SendPropertyChanged("PendingTPABy");
					this.OnPendingTPAByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingTPAByTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PendingTPAByTime
		{
			get
			{
				return this._PendingTPAByTime;
			}
			set
			{
				if ((this._PendingTPAByTime != value))
				{
					this.OnPendingTPAByTimeChanging(value);
					this.SendPropertyChanging();
					this._PendingTPAByTime = value;
					this.SendPropertyChanged("PendingTPAByTime");
					this.OnPendingTPAByTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachedPath", DbType="NVarChar(MAX)")]
		public string AttachedPath
		{
			get
			{
				return this._AttachedPath;
			}
			set
			{
				if ((this._AttachedPath != value))
				{
					this.OnAttachedPathChanging(value);
					this.SendPropertyChanging();
					this._AttachedPath = value;
					this.SendPropertyChanged("AttachedPath");
					this.OnAttachedPathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Transaction]")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BoxID;
		
		private string _BatchID;
		
		private string _Pre_AuthID;
		
		private string _SetID;
		
		private string _Provider_Name;
		
		private string _AddedBy;
		
		private System.Nullable<System.DateTime> _AddTime;
		
		private int _ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBoxIDChanging(string value);
    partial void OnBoxIDChanged();
    partial void OnBatchIDChanging(string value);
    partial void OnBatchIDChanged();
    partial void OnPre_AuthIDChanging(string value);
    partial void OnPre_AuthIDChanged();
    partial void OnSetIDChanging(string value);
    partial void OnSetIDChanged();
    partial void OnProvider_NameChanging(string value);
    partial void OnProvider_NameChanged();
    partial void OnAddedByChanging(string value);
    partial void OnAddedByChanged();
    partial void OnAddTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAddTimeChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public Transaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoxID", DbType="NVarChar(MAX)")]
		public string BoxID
		{
			get
			{
				return this._BoxID;
			}
			set
			{
				if ((this._BoxID != value))
				{
					this.OnBoxIDChanging(value);
					this.SendPropertyChanging();
					this._BoxID = value;
					this.SendPropertyChanged("BoxID");
					this.OnBoxIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchID", DbType="NVarChar(MAX)")]
		public string BatchID
		{
			get
			{
				return this._BatchID;
			}
			set
			{
				if ((this._BatchID != value))
				{
					this.OnBatchIDChanging(value);
					this.SendPropertyChanging();
					this._BatchID = value;
					this.SendPropertyChanged("BatchID");
					this.OnBatchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pre_AuthID", DbType="NVarChar(MAX)")]
		public string Pre_AuthID
		{
			get
			{
				return this._Pre_AuthID;
			}
			set
			{
				if ((this._Pre_AuthID != value))
				{
					this.OnPre_AuthIDChanging(value);
					this.SendPropertyChanging();
					this._Pre_AuthID = value;
					this.SendPropertyChanged("Pre_AuthID");
					this.OnPre_AuthIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetID", DbType="NVarChar(MAX)")]
		public string SetID
		{
			get
			{
				return this._SetID;
			}
			set
			{
				if ((this._SetID != value))
				{
					this.OnSetIDChanging(value);
					this.SendPropertyChanging();
					this._SetID = value;
					this.SendPropertyChanged("SetID");
					this.OnSetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider_Name", DbType="NVarChar(MAX)")]
		public string Provider_Name
		{
			get
			{
				return this._Provider_Name;
			}
			set
			{
				if ((this._Provider_Name != value))
				{
					this.OnProvider_NameChanging(value);
					this.SendPropertyChanging();
					this._Provider_Name = value;
					this.SendPropertyChanged("Provider_Name");
					this.OnProvider_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="NVarChar(MAX)")]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this.OnAddTimeChanging(value);
					this.SendPropertyChanging();
					this._AddTime = value;
					this.SendPropertyChanged("AddTime");
					this.OnAddTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userTB")]
	public partial class userTB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Type;
		
		private string _IsOnline;
		
		private string _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnIsOnlineChanging(string value);
    partial void OnIsOnlineChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public userTB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(100)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="NVarChar(50)")]
		public string IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
